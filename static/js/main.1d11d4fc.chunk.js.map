{"version":3,"sources":["images/theme-icon.svg","style/globalStyle.js","style/style.js","contexts.js","utils.js","components/Header/HeaderStyle.js","components/Header/Header.js","WebAPI.js","pages/HomePage/HomePageStyle.js","pages/HomePage/Paginator.js","pages/HomePage/HomePage.js","pages/PostListPage/PostListPageStyle.js","pages/PostListPage/PostListPage.js","components/Comments.js","pages/PostPage/PostPageStyle.js","pages/PostPage/PostPage.js","style/formStyle.js","pages/LoginPage/LoginPage.js","pages/LoadingPage/LoadingPageStyle.js","pages/LoadingPage/LoadingPage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPageStyle.js","pages/NewPostPage/NewPostPage.js","pages/AboutPage/AboutPageStyle.js","pages/AboutPage/AboutPage.js","components/App/App.js","index.js"],"names":["_path","GlobalStyle","createGlobalStyle","theme","backgroundColor","MEDIA_QUERY_MD","light","navTextColor","titleColor","textColor","infoColor","navBoxShadow","postBoxShadow","hoverColor","dark","AuthContext","createContext","LoadingContext","TOKEN_NAME","THEME_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","setTheme","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgThemeIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","HeaderWrapper","styled","div","IconWrapper","Span","span","Hamburger","Brand","Link","NavbarContainer","$isMenuOpen","NavbarList","Nav","NavLink","ProgressContainer","ProgressBar","$scroll","lightStyle","fontWeight","borderBottom","darkStyle","Header","isUser","currentTheme","setCurrentTheme","useContext","user","setUser","useState","isMenuOpen","setIsMenuOpen","scroll","setScroll","progressBarHandler","totalScroll","document","documentElement","scrollTop","windowHeight","scrollHeight","clientHeight","useEffect","window","addEventListener","removeEventListener","activeStyle","useMemo","to","onClick","BASE_URL","register","nickname","username","password","a","fetch","method","headers","body","JSON","stringify","response","json","data","console","log","message","login","getMe","authorization","getPostsList","getPosts","page","total","get","getPostId","getUserPosts","userId","createNewPost","editPost","deletePost","HomePostList","HomePostContainer","HomePostTitle","HomePostBody","HomePostAuthor","HomePostDate","Pagination","PageBtn","CurrentPage","TotalPage","Dots","Button","button","Paginator","setPage","totalPostPages","pages","setPages","prev","scrollTo","HomePost","post","Date","createdAt","toLocaleDateString","Markdown","HomePage","setIsLoading","posts","setPosts","setTotalPostPages","isPaginationLoading","setIsPaginationLoading","useLayoutEffect","fetchGetHomePosts","Math","ceil","map","PostList","ButtonWrapper","PostListButton","$active","YearContainer","Year","PostContainer","PostTitle","PostDate","Post","substring","PostListPage","postState","setPostState","years","setYears","fetchPostList","sort","b","yearsArray","push","getFullYear","Set","handleAllPosts","handleUserPosts","fetchUserPostList","year","index","filter","COMMENTS_ID","Comments","script","createElement","src","setAttribute","async","comments","getElementById","appendChild","innerHTML","EditButton","DeleteButton","PostBody","PostInfo","PostAuthor","PostCreatedAt","PostContent","PostPage","useParams","history","useHistory","setPost","FetchGetPost","then","flow","keyframes","FormContainer","form","FormTitleButton","FormInfo","label","FormText","FormInput","input","ErrorMessage","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","loginResponse","ok","getMeResponse","toString","handleInputFocus","onSubmit","value","onChange","onFocus","type","LoadingWrapper","Loading","LoadingPage","setNickname","registerResponse","NewPostContainer","NewPostTitle","NewPostTitleInput","NewPostBody","NewPostButton","textarea","NewPostPage","edit","titleValue","setTitleValue","postValue","setPostValue","isEdit","editId","location","useLocation","fetchPostData","pathname","handleSendPost","alert","placeholder","textareaProps","AboutContainer","AboutText","AboutPage","Root","App","setIsUser","isLoading","Provider","exact","path","RegisterPage","ReactDOM","render"],"mappings":"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","file":"static/js/main.1d11d4fc.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgThemeIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50 23.4375C55.2536 23.4375 60.3892 24.9954 64.7573 27.9141C69.1255 30.8328 72.5301 34.9813 74.5405 39.835C76.551 44.6886 77.077 50.0295 76.0521 55.1821C75.0272 60.3347 72.4974 65.0677 68.7825 68.7825C65.0677 72.4974 60.3347 75.0272 55.1821 76.0521C50.0295 77.077 44.6886 76.551 39.835 74.5405C34.9813 72.5301 30.8328 69.1255 27.9141 64.7573C24.9954 60.3892 23.4375 55.2536 23.4375 50C23.4455 42.9576 26.2466 36.206 31.2263 31.2263C36.206 26.2466 42.9576 23.4455 50 23.4375ZM17.1875 50C17.1875 49.1712 16.8583 48.3763 16.2722 47.7903C15.6862 47.2042 14.8913 46.875 14.0625 46.875H10.9375C10.1087 46.875 9.31384 47.2042 8.72779 47.7903C8.14174 48.3763 7.8125 49.1712 7.8125 50C7.8125 50.8288 8.14174 51.6237 8.72779 52.2097C9.31384 52.7958 10.1087 53.125 10.9375 53.125H14.0625C14.8913 53.125 15.6862 52.7958 16.2722 52.2097C16.8583 51.6237 17.1875 50.8288 17.1875 50ZM26.798 77.6211C27.0952 77.3325 27.332 76.9877 27.4947 76.6068C27.6574 76.2258 27.7427 75.8163 27.7457 75.4021C27.7487 74.9879 27.6693 74.5772 27.5122 74.194C27.3551 73.8107 27.1233 73.4625 26.8304 73.1696C26.5375 72.8767 26.1892 72.645 25.806 72.4879C25.4227 72.3308 25.012 72.2515 24.5978 72.2545C24.1836 72.2576 23.7741 72.3429 23.3932 72.5056C23.0123 72.6684 22.6675 72.9052 22.3789 73.2023L20.1691 75.4121C19.8736 75.7011 19.6384 76.0458 19.477 76.4263C19.3156 76.8069 19.2313 77.2156 19.229 77.6289C19.2267 78.0422 19.3064 78.4519 19.4635 78.8342C19.6206 79.2165 19.852 79.5639 20.1443 79.8561C20.4365 80.1484 20.7839 80.3798 21.1662 80.5369C21.5485 80.694 21.9582 80.7737 22.3715 80.7714C22.7848 80.769 23.1935 80.6848 23.5741 80.5234C23.9546 80.362 24.2993 80.1268 24.5883 79.8313L26.798 77.6211ZM46.875 85.9375V89.0625C46.875 89.8913 47.2042 90.6862 47.7903 91.2722C48.3763 91.8583 49.1712 92.1875 50 92.1875C50.8288 92.1875 51.6237 91.8583 52.2097 91.2722C52.7958 90.6862 53.125 89.8913 53.125 89.0625V85.9375C53.125 85.1087 52.7958 84.3138 52.2097 83.7278C51.6237 83.1417 50.8288 82.8125 50 82.8125C49.1712 82.8125 48.3763 83.1417 47.7903 83.7278C47.2042 84.3138 46.875 85.1087 46.875 85.9375ZM73.202 77.6211L75.4117 79.8309C75.7007 80.1264 76.0454 80.3616 76.4259 80.523C76.8065 80.6844 77.2152 80.7687 77.6285 80.771C78.0418 80.7733 78.4515 80.6936 78.8338 80.5365C79.2161 80.3794 79.5635 80.148 79.8557 79.8557C80.148 79.5635 80.3794 79.2161 80.5365 78.8338C80.6936 78.4515 80.7733 78.0418 80.771 77.6285C80.7687 77.2152 80.6844 76.8065 80.523 76.4259C80.3616 76.0454 80.1264 75.7007 79.8309 75.4117L77.6211 73.202C77.0329 72.6267 76.2415 72.3067 75.4188 72.3113C74.596 72.3159 73.8083 72.6448 73.2265 73.2265C72.6448 73.8083 72.3159 74.596 72.3113 75.4188C72.3067 76.2415 72.6267 77.0329 73.202 77.6211V77.6211ZM82.8125 50C82.8125 50.8288 83.1417 51.6237 83.7278 52.2097C84.3138 52.7958 85.1087 53.125 85.9375 53.125H89.0625C89.8913 53.125 90.6862 52.7958 91.2722 52.2097C91.8583 51.6237 92.1875 50.8288 92.1875 50C92.1875 49.1712 91.8583 48.3763 91.2722 47.7903C90.6862 47.2042 89.8913 46.875 89.0625 46.875H85.9375C85.1087 46.875 84.3138 47.2042 83.7278 47.7903C83.1417 48.3763 82.8125 49.1712 82.8125 50ZM73.202 22.3789C72.6267 22.9671 72.3067 23.7585 72.3113 24.5812C72.3159 25.404 72.6448 26.1917 73.2265 26.7735C73.8083 27.3552 74.596 27.6841 75.4188 27.6887C76.2415 27.6933 77.0329 27.3733 77.6211 26.798L79.8309 24.5883C80.4061 24 80.7261 23.2087 80.7215 22.386C80.7169 21.5632 80.388 20.7755 79.8063 20.1937C79.2245 19.612 78.4368 19.2831 77.614 19.2785C76.7913 19.2739 76 19.5939 75.4117 20.1691L73.202 22.3789ZM46.875 10.9375V14.0625C46.875 14.8913 47.2042 15.6862 47.7903 16.2722C48.3763 16.8583 49.1712 17.1875 50 17.1875C50.8288 17.1875 51.6237 16.8583 52.2097 16.2722C52.7958 15.6862 53.125 14.8913 53.125 14.0625V10.9375C53.125 10.1087 52.7958 9.31384 52.2097 8.72779C51.6237 8.14174 50.8288 7.8125 50 7.8125C49.1712 7.8125 48.3763 8.14174 47.7903 8.72779C47.2042 9.31384 46.875 10.1087 46.875 10.9375ZM27.7133 24.5883C27.7138 24.1778 27.6332 23.7713 27.4761 23.3921C27.3191 23.0129 27.0886 22.6684 26.798 22.3785L24.5883 20.1691C24.2993 19.8736 23.9546 19.6384 23.5741 19.477C23.1935 19.3156 22.7848 19.2313 22.3715 19.229C21.9582 19.2267 21.5485 19.3064 21.1662 19.4635C20.7839 19.6206 20.4365 19.852 20.1443 20.1443C19.852 20.4365 19.6206 20.7839 19.4635 21.1662C19.3064 21.5485 19.2267 21.9582 19.229 22.3715C19.2313 22.7848 19.3156 23.1935 19.477 23.5741C19.6384 23.9546 19.8736 24.2993 20.1691 24.5883L22.3789 26.798C22.816 27.235 23.3728 27.5325 23.9789 27.653C24.585 27.7735 25.2133 27.7116 25.7843 27.4751C26.3552 27.2386 26.8432 26.8381 27.1866 26.3242C27.5299 25.8104 27.7132 25.2063 27.7133 24.5883V24.5883Z\",\n    fill: \"#545454\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThemeIcon);\nexport default __webpack_public_path__ + \"static/media/theme-icon.b8d1871a.svg\";\nexport { ForwardRef as ReactComponent };","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.backgroundColor};\r\n  }\r\n  \r\n  a {\r\n    text-decoration: none;\r\n    display: flex;\r\n    transition: all 0.1s;\r\n  \r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  input {\r\n    outline: none;\r\n    border: none;\r\n    background: none;\r\n  }\r\n  \r\n  button {\r\n    border: none;\r\n    cursor: pointer;\r\n    background: none;\r\n\r\n    &:hover, \r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  hr {\r\n    border: none;\r\n    border-bottom: 1px solid #ccc;\r\n    margin-bottom: 16px;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export const MEDIA_QUERY_MD = '@media screen and (max-width: 768px)'\r\n\r\nexport const theme = {\r\n  light: {\r\n    backgroundColor: 'white',\r\n    navTextColor: 'black',\r\n    titleColor: '#333',\r\n    textColor: '#333',\r\n    infoColor: '#B7B7B7',\r\n    navBoxShadow: '0 2px 3px 1px rgba(0, 0, 0, 0.2)',\r\n    postBoxShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)',\r\n    hoverColor: '#145df6',\r\n  },\r\n\r\n  dark: {\r\n    backgroundColor: '#232320',\r\n    navTextColor: 'white',\r\n    titleColor: '#EEEEEE',\r\n    textColor: '#D6DBD7',\r\n    infoColor: '#ccc',\r\n    navBoxShadow: '0 2px 3px 2px rgba(255, 255, 255, 0.4)',\r\n    postBoxShadow: '2px 2px 5px 2px rgba(255, 255, 255, 0.6)',\r\n    hoverColor: '#F9D33F',\r\n  }\r\n}","import { createContext } from \"react\"\r\n\r\nexport const AuthContext = createContext(null)\r\nexport const LoadingContext = createContext(null)","const TOKEN_NAME = 'token'\r\nconst THEME_NAME = 'theme'\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token)\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME)\r\n}\r\n\r\nexport const setTheme = (theme) => {\r\n  localStorage.setItem(THEME_NAME, theme)\r\n}\r\n\r\nexport const getTheme = () => {\r\n  return localStorage.getItem(THEME_NAME) || 'light'\r\n}\r\n","import styled from 'styled-components'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { MEDIA_QUERY_MD } from '../../style/style'\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  height: 64px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  box-shadow: ${({ theme }) => theme.navBoxShadow};\r\n  padding: 0 32px;\r\n  background: ${({ theme }) => theme.backgroundColor};\r\n  z-index: 50;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nexport const IconWrapper = styled.div`\r\n  width: 30px;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 12px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n\r\n  & svg {\r\n    path {\r\n      fill: ${({ theme }) => theme.navTextColor};\r\n    }\r\n  }\r\n\r\n  & svg:hover {\r\n    path {\r\n      fill: ${({ theme }) => theme.hoverColor};\r\n    }\r\n  }\r\n`\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  width: 32px;\r\n  height: 4px;\r\n  margin-top: 5px;\r\n  background: ${({ theme }) => theme.navTextColor};\r\n  transition: all 0.1s;\r\n`\r\n\r\nexport const Hamburger = styled.div`\r\n  display: none;\r\n  transition: all 0.1s;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    cursor: pointer;\r\n    display: block;\r\n\r\n    &:hover ${Span} {\r\n      background: ${({ theme }) => theme.hoverColor};\r\n    }\r\n  }\r\n`\r\n\r\nexport const Brand = styled(Link)`\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.navTextColor};\r\n  transition: all 0.1s;\r\n  margin-right: 8px;\r\n\r\n  &:hover {\r\n    color: #145df6;\r\n  }\r\n`\r\n\r\nexport const NavbarContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    display: ${(props) => (props.$isMenuOpen ? 'flex' : 'none')};\r\n    flex-direction: column;\r\n    align-items: center;\r\n    position: fixed;\r\n    padding-top: 32px;\r\n    top: 64px;\r\n    left: 0;\r\n    width: 100%;\r\n    box-shadow: ${({ theme }) => theme.navBoxShadow};\r\n    background: ${({ theme }) => theme.backgroundColor};\r\n  }\r\n`\r\n\r\nexport const NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 64px;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n`\r\n\r\nexport const Nav = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100px;\r\n  color: ${({ theme }) => theme.navTextColor};\r\n  transition: all 0.1s;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 0;\r\n    height: 3px;\r\n    background: ${({ theme }) => theme.hoverColor};\r\n    transition: width 0.5s;\r\n  }\r\n\r\n  &:hover:before {\r\n    width: 100px;\r\n  }\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    margin-bottom: 16px;\r\n    width: 100%;\r\n\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 0;\r\n      height: 0;\r\n    }\r\n\r\n    &:hover::before {\r\n      width: 0;\r\n    }\r\n\r\n    &:hover {\r\n      font-weight: 600;\r\n      color: ${({ theme }) => theme.hoverColor};\r\n    }\r\n  }\r\n`\r\n\r\nexport const ProgressContainer = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 4px;\r\n  z-index: 100;\r\n`\r\n\r\nexport const ProgressBar = styled.div`\r\n  width: ${props => props.$scroll};\r\n  height: 4px;\r\n  background: red;\r\n`","import React, { useState, useContext, useMemo, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AuthContext } from '../../contexts'\r\nimport { setAuthToken, setTheme } from '../../utils'\r\nimport { ReactComponent as ThemeIcon } from '../../images/theme-icon.svg'\r\nimport {\r\n  HeaderWrapper,\r\n  IconWrapper,\r\n  Hamburger,\r\n  Span,\r\n  NavbarContainer,\r\n  Brand,\r\n  NavbarList,\r\n  Nav,\r\n  ProgressContainer,\r\n  ProgressBar,\r\n} from './HeaderStyle'\r\n\r\nconst lightStyle = {\r\n  fontWeight: '600',\r\n  borderBottom: '3px solid rgba(0, 0, 0, 0.5)',\r\n}\r\n\r\nconst darkStyle = {\r\n  fontWeight: '600',\r\n  borderBottom: '3px solid #EAEAED',\r\n}\r\n\r\nfunction Header({ isUser, currentTheme, setCurrentTheme }) {\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const [scroll, setScroll] = useState(0)\r\n\r\n  const handleChangeTheme = () => {\r\n    if (currentTheme === 'light') {\r\n      setCurrentTheme('dark')\r\n      setTheme('dark')\r\n      return\r\n    }\r\n\r\n    setCurrentTheme('light')\r\n    setTheme('light')\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setAuthToken('')\r\n    setUser(null)\r\n    setIsMenuOpen(false)\r\n  }\r\n\r\n  const progressBarHandler = () => {    \r\n    const totalScroll = document.documentElement.scrollTop\r\n    const windowHeight =\r\n      document.documentElement.scrollHeight -\r\n      document.documentElement.clientHeight\r\n    const scroll = `${(totalScroll / windowHeight) * 100}%`\r\n\r\n    if (scroll === 'NaN%') return setScroll(0)\r\n\r\n    setScroll(scroll)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', progressBarHandler)\r\n    return () => window.removeEventListener('scroll', progressBarHandler)\r\n  })\r\n\r\n  const activeStyle = useMemo(() => {\r\n    return currentTheme === 'light' ? lightStyle : darkStyle\r\n  }, [currentTheme])\r\n\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <Brand to=\"/\" onClick={() => setIsMenuOpen(false)}>\r\n          Blog\r\n        </Brand>\r\n        <IconWrapper onClick={handleChangeTheme}>\r\n          <ThemeIcon />\r\n        </IconWrapper>\r\n        <Hamburger\r\n          $isMenuOpen={isMenuOpen}\r\n          onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n        >\r\n          <Span />\r\n          <Span />\r\n          <Span />\r\n        </Hamburger>\r\n        {isUser && (\r\n          <NavbarContainer $isMenuOpen={isMenuOpen}>\r\n            <NavbarList>\r\n              <Nav\r\n                to=\"/posts-list\"\r\n                activeStyle={activeStyle}\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                文章列表\r\n              </Nav>\r\n              <Nav\r\n                to=\"/about\"\r\n                activeStyle={activeStyle}\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                關於我\r\n              </Nav>\r\n              {user && (\r\n                <Nav\r\n                  to=\"/new-post\"\r\n                  activeStyle={activeStyle}\r\n                  onClick={() => setIsMenuOpen(false)}\r\n                >\r\n                  發布文章\r\n                </Nav>\r\n              )}\r\n            </NavbarList>\r\n            <NavbarList>\r\n              {!user && (\r\n                <>\r\n                  <Nav\r\n                    to=\"/register\"\r\n                    activeStyle={activeStyle}\r\n                    onClick={() => setIsMenuOpen(false)}\r\n                  >\r\n                    註冊\r\n                  </Nav>\r\n                  <Nav\r\n                    to=\"/login\"\r\n                    activeStyle={activeStyle}\r\n                    onClick={() => setIsMenuOpen(false)}\r\n                  >\r\n                    登入\r\n                  </Nav>\r\n                </>\r\n              )}\r\n              {user && (\r\n                <Nav to=\"/\" onClick={handleLogout}>\r\n                  登出\r\n                </Nav>\r\n              )}\r\n            </NavbarList>\r\n          </NavbarContainer>\r\n        )}\r\n      </HeaderWrapper>\r\n      <ProgressContainer>\r\n        <ProgressBar $scroll={scroll}></ProgressBar>\r\n      </ProgressContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  isUser: PropTypes.bool,\r\n  currentTheme: PropTypes.string,\r\n  setCurrentTheme: PropTypes.func,\r\n}\r\n\r\nexport default Header\r\n","import { getAuthToken } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nconst POST_LIMIT = 5\r\n\r\nexport const register = async (nickname, username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        nickname,\r\n        username,\r\n        password,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getMe = async () => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPostsList = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/posts?_sort=createdAt&_order=desc`\r\n    )\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPosts = async (page) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/posts?&_page=${page}&_limit=${POST_LIMIT}&_expand=user&_sort=createdAt&_order=desc`\r\n    )\r\n    const data = await response.json()\r\n    const total = response.headers.get('x-total-count') \r\n    return { data, total }\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPostId = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts/${id}?_expand=user`)\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getUserPosts = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/users/${userId}?_embed=posts`)\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const createNewPost = async (title, body) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const editPost = async (id, title, body) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts/${id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n\r\nexport const deletePost = async (id) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        'content-type': 'application/json',\r\n      }\r\n    })\r\n    const data = await response.json\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HomePostList = styled.div`\r\n  padding: 16px;\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n`\r\n\r\nexport const HomePostContainer = styled.div`\r\n  border: 1px solid #ccc;\r\n  padding: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  box-shadow: ${({ theme }) => theme.postBoxShadow};\r\n  color: #333;\r\n  transition: all 0.1s;\r\n\r\n  & + & {\r\n    margin-top: 24px;\r\n  }\r\n`\r\n\r\nexport const HomePostTitle = styled(Link)`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  margin-bottom: 16px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: ${({ theme }) => theme.titleColor};\r\n\r\n   &:hover {\r\n    color: ${({ theme }) => theme.hoverColor};\r\n  }\r\n`\r\n\r\nexport const HomePostBody = styled.div`\r\n  font-size: 18px;\r\n  line-height: 1.5;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 4;\r\n  -webkit-box-orient: vertical;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  white-space: pre-wrap;\r\n`\r\n\r\nexport const HomePostAuthor = styled.div`\r\n  font-size: 14px;\r\n  margin-bottom: 4px;\r\n  color: ${({ theme }) => theme.infoColor};\r\n`\r\n\r\nexport const HomePostDate = styled.div`\r\n  color: ${({ theme }) => theme.infoColor};\r\n  font-size: 14px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport const Pagination = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: baseline;\r\n  margin: 28px 0 8px;\r\n  color: ${({ theme }) => theme.titleColor};\r\n`\r\n\r\nexport const PageBtn = styled.div`\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverColor};\r\n  }\r\n`\r\nexport const CurrentPage = styled.div`\r\n  margin: 0 16px;\r\n`\r\n\r\nexport const TotalPage = styled.div`\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.titleColor};\r\n`\r\n\r\nexport const Dots = styled.span``\r\n\r\nexport const Button = styled.button`\r\n  margin: 4px;\r\n  padding: 4px;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  color: ${({ theme }) => theme.titleColor};\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.titleColor};\r\n    color: ${({ theme }) => theme.backgroundColor};\r\n  }\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Pagination,\r\n  PageBtn,\r\n  CurrentPage,\r\n  TotalPage,\r\n  Dots,\r\n  Button,\r\n} from './HomePageStyle'\r\n\r\nfunction Paginator({ page, setPage, totalPostPages }) {\r\n  const [pages, setPages] = useState([])\r\n\r\n  useEffect(() => {\r\n    setPages([])\r\n    for (let i = 1; i <= totalPostPages; i++) {\r\n      if (i - page > 2 && i !== totalPostPages && i + 1 !== totalPostPages) {\r\n        setPages((prev) => [...prev, <Dots key={i}>...</Dots>])\r\n        i = totalPostPages - 1\r\n        continue\r\n      }\r\n\r\n      if (page - i > 3 && i !== 1) {\r\n        setPages((prev) => [...prev, <Dots key={i}>...</Dots>])\r\n        i = page - 3\r\n        continue\r\n      }\r\n\r\n      setPages((prev) => {\r\n        return [\r\n          ...prev,\r\n          <Button key={i} onClick={() => setPage(i)}>\r\n            {i}\r\n          </Button>,\r\n        ]\r\n      })\r\n    }\r\n  }, [page, setPage, totalPostPages])\r\n\r\n  const handlePreBtnClick = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1)\r\n    }\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  const handleNextBtnClick = () => {\r\n    if (page < totalPostPages) {\r\n      setPage(page + 1)\r\n    }\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Pagination>\r\n        <PageBtn onClick={handlePreBtnClick}>＜</PageBtn>\r\n        <CurrentPage>{[...pages]}</CurrentPage>\r\n        <PageBtn onClick={handleNextBtnClick}>＞</PageBtn>\r\n      </Pagination>\r\n      <TotalPage>\r\n        {page} / {totalPostPages}\r\n      </TotalPage>\r\n    </>\r\n  )\r\n}\r\n\r\nPaginator.propTypes = {\r\n  page: PropTypes.number,\r\n  setPage: PropTypes.func,\r\n  totalPostPages: PropTypes.number,\r\n}\r\n\r\nexport default Paginator\r\n","import React, { useState, useLayoutEffect, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport { getPosts } from '../../WebAPI'\r\nimport { LoadingContext } from '../../contexts'\r\nimport Paginator from './Paginator'\r\nimport {\r\n  HomePostContainer,\r\n  HomePostTitle,\r\n  HomePostAuthor,\r\n  HomePostDate,\r\n  HomePostBody,\r\n  HomePostList,\r\n} from './HomePageStyle'\r\n\r\nfunction HomePost({ post }) {\r\n  return (\r\n    <HomePostContainer>\r\n      <HomePostTitle to={`/posts/${post.id}`}>{post.title}</HomePostTitle>\r\n      <HomePostAuthor>{post.user && post.user.nickname}</HomePostAuthor>\r\n      <HomePostDate>\r\n        {new Date(post.createdAt).toLocaleDateString()}\r\n      </HomePostDate>\r\n      <HomePostBody>\r\n        <MDEditor.Markdown source={post.body} />\r\n      </HomePostBody>\r\n    </HomePostContainer>\r\n  )\r\n}\r\n\r\nHomePost.propTypes = {\r\n  post: PropTypes.object,\r\n}\r\n\r\nfunction HomePage() {\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const [posts, setPosts] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [totalPostPages, setTotalPostPages] = useState(0)\r\n  const [isPaginationLoading, setIsPaginationLoading] = useState(null)\r\n\r\n  useLayoutEffect(() => {\r\n    const fetchGetHomePosts = async () => {\r\n      setIsLoading(true)\r\n      setIsPaginationLoading(false)\r\n\r\n      const data = await getPosts(page)\r\n      setPosts(data.data)\r\n      setTotalPostPages(Math.ceil(data.total / 5))\r\n\r\n      setIsLoading(false)\r\n      setIsPaginationLoading(true)\r\n    }\r\n\r\n    fetchGetHomePosts()\r\n    window.scrollTo(0, 0)\r\n  }, [setIsLoading, page, totalPostPages])\r\n\r\n  return (\r\n    <HomePostList>\r\n      {posts.map((post) => (\r\n        <HomePost key={post.id} post={post} />\r\n      ))}\r\n      {isPaginationLoading && (\r\n        <>\r\n          {!!posts.length && !!totalPostPages && (\r\n            <Paginator\r\n              page={page}\r\n              setPage={setPage}\r\n              totalPostPages={totalPostPages}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </HomePostList>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const PostList = styled.div`\r\n  padding: 16px;\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n`\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const PostListButton = styled.div`\r\n  margin: 0 8px;\r\n  cursor: pointer;\r\n  color: ${(props) => (props.$active ? 'red' : 'gray')};\r\n  font-weight: ${(props) => (props.$active ? '600' : '')};\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    color:  ${({ theme }) => theme.hoverColor};\r\n  }\r\n`\r\n\r\nexport const Span = styled.span`\r\n  color: ${({ theme }) => theme.textColor};\r\n` \r\n\r\nexport const YearContainer = styled.div`\r\n  padding-top: 32px;\r\n\r\n  & + & {\r\n    margin-top: 32px;\r\n  }\r\n`\r\n\r\nexport const Year = styled.span`\r\n  display: inline-block;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  margin-bottom: 24px;\r\n  border-bottom: 3px solid ${({ theme }) => theme.hoverColor};\r\n  color: ${({ theme }) => theme.titleColor};\r\n`\r\n\r\nexport const PostContainer = styled(Link)`\r\n  padding: 8px 24px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  background: ${({ theme }) => theme.backgroundColor};\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    border: 1px solid #ccc;\r\n    box-shadow: ${({ theme }) => theme.postBoxShadow};\r\n  }\r\n`\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 24px;\r\n  color: ${({ theme }) => theme.titleColor};\r\n  max-width: 600px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\nexport const PostDate = styled.div`\r\n  color: ${({ theme }) => theme.infoColor};\r\n  font-size: 14px;\r\n`\r\n","import React, { useLayoutEffect, useEffect, useState, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getPostsList, getUserPosts } from '../../WebAPI'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport {\r\n  PostContainer,\r\n  PostTitle,\r\n  PostDate,\r\n  PostList,\r\n  ButtonWrapper,\r\n  PostListButton,\r\n  Span,\r\n  YearContainer,\r\n  Year,\r\n} from './PostListPageStyle'\r\n\r\nfunction Post({ post }) {\r\n  return (\r\n    <PostContainer to={`/posts/${post.id}`}>\r\n      <PostTitle>{post.title}</PostTitle>\r\n      <PostDate>\r\n        {new Date(post.createdAt).toLocaleDateString().substring(5, 10)}\r\n      </PostDate>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object,\r\n}\r\n\r\nfunction PostListPage({ isUser }) {\r\n  const { user } = useContext(AuthContext)\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const [posts, setPosts] = useState([])\r\n  const [postState, setPostState] = useState('allPosts')\r\n  const [years, setYears] = useState([])\r\n\r\n  useLayoutEffect(() => {\r\n    const fetchPostList = async () => {\r\n      setIsLoading(true)\r\n      if (isUser) {\r\n        if (user) {\r\n          const userId = user.id\r\n          const data = await getUserPosts(userId)\r\n\r\n          const posts = data.posts.sort((a, b) => {\r\n            return a.createdAt < b.createdAt ? 1 : -1\r\n          })\r\n          setPosts(posts)\r\n          setPostState('myPosts')\r\n          setIsLoading(false)\r\n          return\r\n        }\r\n\r\n        const data = await getPostsList()\r\n        setPosts(data)\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchPostList()\r\n  }, [isUser, setIsLoading, user])\r\n\r\n  useEffect(() => {\r\n    const yearsArray = []\r\n    for (const post of posts) {\r\n      yearsArray.push(new Date(post.createdAt).getFullYear())\r\n    }\r\n\r\n    setYears([...new Set(yearsArray)])\r\n  }, [posts])\r\n\r\n  const handleAllPosts = () => {\r\n    setPostState('allPosts')\r\n    const fetchPostList = async () => {\r\n      setIsLoading(true)\r\n\r\n      const data = await getPostsList()\r\n\r\n      setPosts(data)\r\n      setIsLoading(false)\r\n    }\r\n    fetchPostList()\r\n  }\r\n\r\n  const handleUserPosts = () => {\r\n    setPostState('myPosts')\r\n    const fetchUserPostList = async () => {\r\n      setIsLoading(true)\r\n\r\n      const userId = user.id\r\n      const data = await getUserPosts(userId)\r\n      const posts = data.posts.sort((a, b) => {\r\n        return a.createdAt < b.createdAt ? 1 : -1\r\n      })\r\n\r\n      setPosts(posts)\r\n      setIsLoading(false)\r\n    }\r\n    fetchUserPostList()\r\n  }\r\n\r\n  return (\r\n    <PostList>\r\n      {user && (\r\n        <ButtonWrapper>\r\n          {postState === 'allPosts' && (\r\n            <>\r\n              <PostListButton $active onClick={handleAllPosts}>\r\n                all posts\r\n              </PostListButton>\r\n              <Span>/</Span>\r\n              <PostListButton onClick={handleUserPosts}>\r\n                my posts\r\n              </PostListButton>\r\n            </>\r\n          )}\r\n          {postState === 'myPosts' && (\r\n            <>\r\n              <PostListButton onClick={handleAllPosts}>\r\n                all posts\r\n              </PostListButton>\r\n              <Span>/</Span>\r\n              <PostListButton $active onClick={handleUserPosts}>\r\n                my posts\r\n              </PostListButton>\r\n            </>\r\n          )}\r\n        </ButtonWrapper>\r\n      )}\r\n      {years.map((year, index) => {\r\n        return (\r\n          <YearContainer key={index}>\r\n            <Year>{year}</Year>\r\n            {posts\r\n              .filter((post) => new Date(post.createdAt).getFullYear() === year)\r\n              .map((post) => (\r\n                <Post key={post.id} post={post} />\r\n              ))}\r\n          </YearContainer>\r\n        )\r\n      })}\r\n    </PostList>\r\n  )\r\n}\r\n\r\nPostListPage.propTypes = {\r\n  isUser: PropTypes.bool,\r\n}\r\n\r\nexport default PostListPage\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst COMMENTS_ID = 'comments-container'\r\n\r\nfunction Comments({ currentTheme }) {\r\n  useEffect(() => {\r\n    const script = document.createElement('script')\r\n    script.src = 'https://utteranc.es/client.js'\r\n    script.setAttribute('repo', 'YO-0115/react-blog')\r\n    script.setAttribute('issue-term', 'pathname')\r\n\r\n    if (currentTheme === 'light') {\r\n      script.setAttribute('theme', 'github-light')\r\n    } else {\r\n      script.setAttribute('theme', 'github-dark')\r\n    }\r\n\r\n    script.setAttribute('crossorigin', 'anonymous')\r\n    script.async = true\r\n\r\n    const comments = document.getElementById(COMMENTS_ID)\r\n    if (comments) comments.appendChild(script)\r\n\r\n    return () => {\r\n      const comments = document.getElementById(COMMENTS_ID)\r\n      if (comments) comments.innerHTML = ''\r\n    }\r\n  }, [currentTheme])\r\n\r\n  return <div id={COMMENTS_ID} />\r\n}\r\n\r\nComments.propTypes = {\r\n  currentTheme: PropTypes.string,\r\n}\r\n\r\nexport default Comments\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 70%;\r\n  margin: 56px auto;\r\n`\r\n\r\nexport const EditButton = styled(Link)`\r\n  position: absolute;\r\n  right: 50px;\r\n  bottom: -40px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: all 0.1s;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverColor};\r\n    font-weight: 600;\r\n`\r\n\r\nexport const DeleteButton = styled.div`\r\n  position: absolute;\r\n  right: 5px;\r\n  bottom: -40px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: all 0.1s;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverColor};\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding-bottom: 16px;\r\n  border-bottom: 1px solid #ccc;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  color: ${({ theme }) => theme.titleColor};\r\n  position: relative;\r\n`\r\n\r\nexport const PostBody = styled.div`\r\n  padding: 16px 18px 0;\r\n  max-width: 800px;\r\n  margin: 0 auto 54px;\r\n`\r\n\r\nexport const PostInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nexport const PostAuthor = styled.div`\r\n  font-size: 16px;\r\n  color: ${({ theme }) => theme.infoColor};\r\n  margin-bottom: 4px;\r\n`\r\n\r\nexport const PostCreatedAt = styled.div`\r\n  font-size: 14px;\r\n  text-align: right;\r\n  color: ${({ theme }) => theme.infoColor};\r\n`\r\n\r\nexport const PostContent = styled.div`\r\n  margin-bottom: 28px;\r\n  color: ${({ theme }) => theme.textColor};\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  white-space: pre-wrap;\r\n`\r\n","import React, { useLayoutEffect, useState, useContext } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport { getPostId, deletePost } from '../../WebAPI'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport Comments from '../../components/Comments'\r\nimport {\r\n  PostContainer,\r\n  EditButton,\r\n  DeleteButton,\r\n  PostTitle,\r\n  PostBody,\r\n  PostInfo,\r\n  PostAuthor,\r\n  PostCreatedAt,\r\n  PostContent,\r\n} from './PostPageStyle'\r\n\r\nfunction PostPage({ currentTheme }) {\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const history = useHistory()\r\n  const [post, setPost] = useState({})\r\n\r\n  useLayoutEffect(() => {\r\n    const FetchGetPost = async () => {\r\n      setIsLoading(true)\r\n\r\n      const data = await getPostId(id)\r\n      setPost(data)\r\n      setIsLoading(false)\r\n    }\r\n\r\n    FetchGetPost()\r\n  }, [setIsLoading, id])\r\n\r\n  const handleDelete = () => {\r\n    deletePost(id).then(() => {\r\n      history.push('/posts-list')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle>\r\n        {post.title}\r\n        {(post && post.userId) === (user && user.id) && (\r\n          <>\r\n            <EditButton to={`/edit-post/${post && post.id}`}>編輯</EditButton>\r\n            <DeleteButton onClick={handleDelete}>刪除</DeleteButton>\r\n          </>\r\n        )}\r\n      </PostTitle>\r\n      <PostBody>\r\n        <PostInfo>\r\n          <PostAuthor>{post.user && post.user.nickname}</PostAuthor>\r\n          <PostCreatedAt>\r\n            {new Date(post.createdAt).toLocaleDateString()}\r\n          </PostCreatedAt>\r\n        </PostInfo>\r\n        <PostContent>\r\n          <MDEditor.Markdown source={post.body} />\r\n        </PostContent>\r\n      </PostBody>\r\n      <hr />\r\n      <Comments currentTheme={currentTheme} />\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPostPage.propTypes = {\r\n  currentTheme: PropTypes.string,\r\n}\r\n\r\nexport default PostPage\r\n","import styled, { keyframes } from 'styled-components'\r\n\r\nexport const flow = keyframes`\r\n  0% {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n  50% {\r\n    border-bottom: 1px solid #145df6;\r\n    color: #145df6;\r\n  }\r\n\r\n  100% {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n`\r\n\r\nexport const FormContainer = styled.form`\r\n  width: 70%;\r\n  margin: 56px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`\r\n\r\nexport const FormTitleButton = styled.button`\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.titleColor};\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  margin-bottom: 54px;\r\n  border-bottom: 1px solid #ccc;\r\n  animation: ${flow} 2s infinite;\r\n`\r\nexport const FormInfo = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & + & {\r\n    margin-top: 48px;\r\n  }\r\n`\r\n\r\nexport const FormText = styled.div`\r\n  margin-right: 24px;\r\n  color: ${({ theme }) => theme.textColor};\r\n  font-weight: 600;\r\n`\r\n\r\nexport const FormInput = styled.input`\r\n  display: block;\r\n  padding: 6px 0;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  &::-webkit-input-placeholder {\r\n    text-align: center;\r\n  }\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n`\r\n\r\nexport const ErrorMessage = styled.div`\r\n  color: red;\r\n  position: absolute;\r\n  top: 70px;\r\n`\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { login, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport {\r\n  FormContainer,\r\n  FormTitleButton,\r\n  FormInfo,\r\n  FormInput,\r\n  FormText,\r\n  ErrorMessage,\r\n} from '../../style/formStyle'\r\n\r\nfunction LoginPage() {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState()\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const loginResponse = await login(username, password)\r\n\r\n    if (!loginResponse.ok) {\r\n      setErrorMessage(loginResponse.message)\r\n      return\r\n    }\r\n\r\n    setAuthToken(loginResponse.token)\r\n\r\n    const getMeResponse = await getMe()\r\n\r\n    if (!getMeResponse) {\r\n      setAuthToken(null)\r\n      setErrorMessage(getMeResponse.toString())\r\n      return\r\n    }\r\n    setUser(getMeResponse.data)\r\n    history.push('/')\r\n  }\r\n\r\n  const handleUsernameInput = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleInputFocus = () => {\r\n    setErrorMessage(null)\r\n  }\r\n\r\n  return (\r\n    <FormContainer onSubmit={handleSubmit}>\r\n      <FormTitleButton>登入</FormTitleButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n      <FormInfo>\r\n        <FormText>username</FormText>\r\n        <FormInput\r\n          value={username}\r\n          onChange={handleUsernameInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n      <FormInfo>\r\n        <FormText>password</FormText>\r\n        <FormInput\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import styled, { keyframes } from 'styled-components'\r\n\r\nconst flow = keyframes`\r\n  0% {\r\n    border-bottom: 3px solid #ccc;\r\n  }\r\n\r\n  50% {\r\n    border-bottom: 3px solid #145df6;\r\n    color: #333;\r\n  }\r\n\r\n  100% {\r\n    border-bottom: 3px solid #ccc;\r\n  }\r\n`\r\n\r\nexport const LoadingWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.backgroundColor};\r\n  z-index: 10;\r\n`\r\nexport const Loading = styled.div`\r\n  font-size: 48px;\r\n  padding: 0 24px 16px;\r\n  color: #ccc;\r\n  animation: ${flow} 2s infinite;\r\n`\r\n","import React from 'react'\nimport {LoadingWrapper, Loading} from './LoadingPageStyle'\n\nfunction LoadingPage() {\n  return (\n    <LoadingWrapper>\n      <Loading>Loading</Loading>\n    </LoadingWrapper>\n  )\n}\n\nexport default LoadingPage\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { register, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport {\r\n  FormContainer,\r\n  FormTitleButton,\r\n  FormInfo,\r\n  FormInput,\r\n  FormText,\r\n  ErrorMessage,\r\n} from '../../style/formStyle'\r\n\r\nfunction LoginPage() {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [nickname, setNickname] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState()\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const registerResponse = await register(nickname, username, password)\r\n\r\n    if (!registerResponse.ok) {\r\n      setErrorMessage(registerResponse.message)\r\n      return\r\n    }\r\n\r\n    setAuthToken(registerResponse.token)\r\n\r\n    const getMeResponse = await getMe()\r\n\r\n    if (!getMeResponse) {\r\n      setAuthToken(null)\r\n      setErrorMessage(getMeResponse.toString())\r\n      return\r\n    }\r\n    setUser(getMeResponse.data)\r\n    history.push('/')\r\n  }\r\n\r\n  const handleNicknameInput = (e) => {\r\n    setNickname(e.target.value)\r\n  }\r\n\r\n  const handleUsernameInput = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleInputFocus = () => {\r\n    setErrorMessage(null)\r\n  }\r\n\r\n  return (\r\n    <FormContainer onSubmit={handleSubmit}>\r\n      <FormTitleButton>註冊</FormTitleButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n      <FormInfo>\r\n        <FormText>nickname</FormText>\r\n        <FormInput\r\n          value={nickname}\r\n          onChange={handleNicknameInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n      <FormInfo>\r\n        <FormText>username</FormText>\r\n        <FormInput\r\n          value={username}\r\n          onChange={handleUsernameInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n      <FormInfo>\r\n        <FormText>password</FormText>\r\n        <FormInput\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import styled, { keyframes } from 'styled-components'\r\n\r\nexport const flow = keyframes`\r\n  0% {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n\r\n  50% {\r\n    border-bottom: 1px solid #145df6;\r\n    color: #145df6;\r\n  }\r\n\r\n  100% {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n`\r\n\r\nexport const NewPostContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 56px auto;\r\n  padding: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const NewPostTitle = styled.label`\r\n  margin-bottom: 54px;\r\n  width: 100%;\r\n`\r\n\r\nexport const NewPostTitleInput = styled.input`\r\n  width: 100%;\r\n  padding: 4px 8px;\r\n  text-overflow: ellipsis;\r\n  overflow: auto;\r\n  color: ${({ theme }) => theme.textColor};\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n`\r\n\r\nexport const NewPostBody = styled.label`\r\n  display: block;\r\n  margin-bottom: 54px;\r\n`\r\n\r\nexport const NewPostContent = styled.textarea`\r\n  width: 100%;\r\n  padding: 16px 8px;\r\n`\r\n\r\nexport const NewPostButton = styled.button`\r\n  background: none;\r\n  padding-bottom: 4px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.textColor};\r\n  animation: ${flow} 2s infinite;\r\n`\r\n\r\nexport const ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  margin-top: 16px;\r\n`\r\n","/*eslint-disable*/\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory, useParams, useLocation } from 'react-router-dom'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport { getPostId, createNewPost, editPost } from '../../WebAPI'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport {\r\n  NewPostContainer,\r\n  NewPostTitle,\r\n  NewPostTitleInput,\r\n  NewPostBody,\r\n  NewPostButton,\r\n  ErrorMessage,\r\n} from './NewPostPageStyle'\r\n\r\nfunction NewPostPage({ edit }) {\r\n  const [titleValue, setTitleValue] = useState('')\r\n  const [postValue, setPostValue] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const isEdit = edit === 'edit'\r\n  const { editId } = useParams()\r\n  const { user } = useContext(AuthContext)\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    const fetchPostData = async () => {\r\n      setIsLoading(true)\r\n      if (!user) return history.push('/')\r\n\r\n      if (location.pathname === '/new-post') {\r\n        setTitleValue('')\r\n        setPostValue('')\r\n        setIsLoading(false)\r\n        return\r\n      }\r\n\r\n      if (isEdit) {\r\n        const data = await getPostId(editId)\r\n        if (user.id !== data.userId) return history.push('/')\r\n        setTitleValue(data.title)\r\n        setPostValue(data.body)\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchPostData()\r\n  }, [editId, location.pathname])\r\n\r\n  const handleTitleInput = (e) => {\r\n    setTitleValue(e.target.value)\r\n  }\r\n\r\n  const handleInputFocus = () => {\r\n    setErrorMessage(null)\r\n  }\r\n\r\n  const handleSendPost = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    if (!titleValue || !postValue) return setErrorMessage('未確實填寫')\r\n\r\n    let response = null\r\n\r\n    if (isEdit) {\r\n      response = await editPost(editId, titleValue, postValue)\r\n    } else {\r\n      response = await createNewPost(titleValue, postValue)\r\n    }\r\n\r\n    if (!response) return alert('系統錯誤!')\r\n\r\n    if (response.id) {\r\n      history.push(`/posts/${response.id}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NewPostContainer>\r\n      <NewPostTitle>\r\n        <NewPostTitleInput\r\n          value={titleValue}\r\n          onFocus={handleInputFocus}\r\n          onChange={handleTitleInput}\r\n          placeholder=\"輸入標題...\"\r\n        />\r\n      </NewPostTitle>\r\n      <NewPostBody>\r\n        <MDEditor\r\n          value={postValue}\r\n          height={300}\r\n          textareaProps={{\r\n            placeholder: 'Please enter Markdown text',\r\n          }}\r\n          onChange={setPostValue}\r\n        />\r\n      </NewPostBody>\r\n      <NewPostButton onClick={handleSendPost}>送出</NewPostButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </NewPostContainer>\r\n  )\r\n}\r\n\r\nexport default NewPostPage\r\n","import styled from 'styled-components'\r\n\r\nexport const AboutContainer = styled.div`\r\n  max-width: 600px;\r\n  height: calc(100vh - 64px);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const AboutText = styled.div`\r\n  line-height: 1.8;\r\n  font-size: 24px;\r\n  color: ${({theme}) => theme.textColor};\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -25px;\r\n    left: -25px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-top: 10px solid red;\r\n    border-left: 10px solid red;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -25px;\r\n    right: -25px;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-bottom: 10px solid red;\r\n    border-right: 10px solid red;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { AboutContainer, AboutText } from './AboutPageStyle'\r\n\r\nfunction AboutPage() {\r\n  return (\r\n    <AboutContainer>\r\n      <AboutText>\r\n        我是 YO \r\n        <br />\r\n        這是一個前端用 React Hooks\r\n        <br />\r\n        後端串接 lidemy-student-json-api-server\r\n        <br />\r\n        集合而成的部落格\r\n        <br />\r\n      </AboutText>\r\n    </AboutContainer>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport GlobalStyle from '../../style/globalStyle'\r\nimport { theme } from '../../style/style'\r\nimport Header from '../Header'\r\nimport HomePage from '../../pages/HomePage'\r\nimport PostListPage from '../../pages/PostListPage'\r\nimport PostPage from '../../pages/PostPage'\r\nimport LoginPage from '../../pages/LoginPage'\r\nimport LoadingPage from '../../pages/LoadingPage'\r\nimport RegisterPage from '../../pages/RegisterPage'\r\nimport NewPostPage from '../../pages/NewPostPage'\r\nimport AboutPage from '../../pages/AboutPage'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport { getMe } from '../../WebAPI'\r\nimport { getAuthToken, getTheme } from '../../utils'\r\n\r\nconst Root = styled.div`\r\n  padding-top: 64px;\r\n`\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null)\r\n  const [isUser, setIsUser] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [currentTheme, setCurrentTheme] = useState(getTheme())\r\n\r\n  useEffect(() => {\r\n    setIsUser(false)\r\n    const getToken = getAuthToken()\r\n    if (!getToken) return setIsUser(true)\r\n\r\n    getMe().then((response) => {\r\n      if (response.ok === 1) {\r\n        setUser(response.data)\r\n        setIsUser(true)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\r\n        <ThemeProvider theme={theme[currentTheme]}>\r\n          <Root>\r\n            <Router>\r\n              <GlobalStyle />\r\n              <Header\r\n                isUser={isUser}\r\n                currentTheme={currentTheme}\r\n                setCurrentTheme={setCurrentTheme}\r\n              />\r\n              {isLoading && <LoadingPage />}\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <HomePage />\r\n                </Route>\r\n                <Route path=\"/posts-list\">\r\n                  <PostListPage isUser={isUser} />\r\n                </Route>\r\n                <Route path=\"/posts/:id\">\r\n                  <PostPage currentTheme={currentTheme} />\r\n                </Route>\r\n                <Route path=\"/new-post\">\r\n                  <NewPostPage />\r\n                </Route>\r\n                <Route path=\"/edit-post/:editId\">\r\n                  <NewPostPage edit=\"edit\" />\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                  <AboutPage />\r\n                </Route>\r\n                <Route path=\"/register\">\r\n                  <RegisterPage />\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                  <LoginPage />\r\n                </Route>\r\n              </Switch>\r\n            </Router>\r\n          </Root>\r\n        </ThemeProvider>\r\n      </LoadingContext.Provider>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}