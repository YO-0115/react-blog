{"version":3,"sources":["style/globalStyle.js","contexts.js","utils.js","components/Header/HeaderStyle.js","components/Header/Header.js","WebAPI.js","pages/HomePage/HomePageStyle.js","pages/HomePage/HomePage.js","pages/PostListPage/PostListPageStyle.js","pages/PostListPage/PostListPage.js","pages/PostPage/PostPageStyle.js","pages/PostPage/PostPage.js","style/formStyle.js","pages/LoginPage/LoginPage.js","pages/LoadingPage/LoadingPageStyle.js","pages/LoadingPage/LoadingPage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPageStyle.js","pages/NewPostPage/NewPostPage.js","pages/AboutPage/AboutPageStyle.js","pages/AboutPage/AboutPage.js","components/App/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","AuthContext","createContext","LoadingContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","div","Brand","Link","NavbarList","Nav","NavLink","LeftContainer","activeStyle","Header","isUser","useContext","user","setUser","to","onClick","BASE_URL","getPostsList","a","fetch","response","json","data","console","log","message","getPosts","page","headers","get","total","getPostId","id","register","nickname","username","password","method","body","JSON","stringify","login","getMe","authorization","createNewPost","title","HomePostList","HomePostContainer","HomePostTitle","HomePostBody","HomePostAuthor","HomePostDate","Pagination","PageBtn","CurrentPage","TotalPage","HomePost","post","Date","createdAt","toLocaleDateString","Markdown","source","HomePage","setIsLoading","useState","posts","setPosts","setPage","totalPostPages","setTotalPostPages","isPaginationLoading","setIsPaginationLoading","useLayoutEffect","homePagePosts","Math","ceil","map","window","scrollTo","PostList","YearContainer","Year","span","PostContainer","PostTitle","PostDate","Post","substring","PostListPage","years","setYears","PostsList","yearsArray","push","getFullYear","Set","year","filter","PostBody","PostInfo","PostAuthor","PostCreatedAt","PostContent","PostPage","useParams","setPost","getPost","flow","keyframes","FormContainer","form","FormTitleButton","button","FormInfo","label","FormText","FormInput","input","ErrorMessage","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","history","useHistory","handleSubmit","e","preventDefault","LoginResponse","ok","getMeResponse","toString","handleInputFocus","onSubmit","value","onChange","target","onFocus","type","LoadingWrapper","Loading","LoadingPage","setNickname","registerResponse","NewPostContainer","NewPostTitle","NewPostTitleInput","NewPostBody","NewPostButton","textarea","NewPostPage","titleValue","setTitleValue","postValue","setPostValue","handleSendPost","placeholder","height","textareaProps","AboutContainer","AboutText","AboutPage","Root","App","setIsUser","isLoading","useEffect","then","Provider","exact","path","RegisterPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.450dd7fb.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  \r\n  a {\r\n    text-decoration: none;\r\n    display: flex;\r\n  \r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n  \r\n  a:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  input {\r\n    outline: none;\r\n    border: none;\r\n  }\r\n  \r\n  button {\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  button:hover, button:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { createContext } from \"react\"\r\n\r\nexport const AuthContext = createContext(null)\r\nexport const LoadingContext = createContext(null)","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token)\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME)\r\n}\r\n\r\nexport function ScrollToTop() {\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n\r\n  return null\r\n}\r\n","import styled from 'styled-components'\nimport { Link, NavLink } from 'react-router-dom'\n\n export const HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n  background: white;\n`\n\n export const Brand = styled(Link)`\n  font-size: 32px;\n  font-weight: bold;\n  color: black;\n\n  &:hover {\n    color: #145df6;\n  }\n`\n\n export const NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`\n\n export const Nav = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100px;\n  color: black;\n\n  &:before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    width: 0;\n    height: 2px;\n    background: #145df6;\n    transition: width 0.5s;\n  }\n\n  &:hover:before {\n    width: 100px;\n  }\n`\n\n export const LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { AuthContext } from '../../contexts'\nimport { setAuthToken } from '../../utils'\nimport {\n  HeaderContainer,\n  LeftContainer,\n  Brand,\n  NavbarList,\n  Nav,\n} from './HeaderStyle'\n\nconst activeStyle = {\n  'font-weight': '600',\n  'border-bottom': '2px solid rgba(0, 0, 0, 0.5)',\n}\n\nfunction Header({ isUser }) {\n  const { user, setUser } = useContext(AuthContext)\n\n  const handleLogout = () => {\n    setAuthToken('')\n    setUser(null)\n  }\n\n  return (\n    <HeaderContainer>\n      {isUser && (\n        <>\n          <LeftContainer>\n            <Brand to=\"/\">Blog</Brand>\n            <NavbarList>\n              <Nav to=\"/posts-list\" activeStyle={activeStyle}>\n                文章列表\n              </Nav>\n              <Nav to=\"/about\" activeStyle={activeStyle}>\n                關於我\n              </Nav>\n              {user && (\n                <Nav to=\"/new-post\" activeStyle={activeStyle}>\n                  發布文章\n                </Nav>\n              )}\n            </NavbarList>\n          </LeftContainer>\n          <NavbarList>\n            {!user && (\n              <>\n                <Nav to=\"/register\" activeStyle={activeStyle}>\n                  註冊\n                </Nav>\n                <Nav to=\"/login\" activeStyle={activeStyle}>\n                  登入\n                </Nav>\n              </>\n            )}\n            {user && (\n              <Nav to=\"/\" onClick={handleLogout}>\n                登出\n              </Nav>\n            )}\n          </NavbarList>\n        </>\n      )}\n    </HeaderContainer>\n  )\n}\n\nHeader.propTypes = {\n  isUser: PropTypes.bool,\n}\n\nexport default Header\n","import { getAuthToken } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nconst POST_LIMIT = 5\r\n\r\nexport const getPostsList = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/posts?_sort=createdAt&_order=desc`\r\n    )\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPosts = async (page) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/posts?&_page=${page}&_limit=${POST_LIMIT}&_expand=user&_sort=createdAt&_order=desc`\r\n    )\r\n    const data = await response.json()\r\n    const total = await response.headers.get('x-total-count') \r\n    return { data, total }\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPostId = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts/${id}?_expand=user`)\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const register = async (nickname, username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        nickname,\r\n        username,\r\n        password,\r\n      }),\r\n    })\r\n    const data = response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n      }),\r\n    })\r\n    const data = response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getMe = async () => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    const data = response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const createNewPost = async (title, body) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      }),\r\n    })\r\n    const data = response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const HomePostList = styled.div`\n  padding: 16px;\n  max-width: 800px;\n  margin: 40px auto;\n`\n\nexport const HomePostContainer = styled(Link)`\n  border: 1px solid #ccc;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  color: #333;\n\n  & + & {\n    margin-top: 24px;\n  }\n\n  &:hover {\n    color: blue;\n  }\n`\n\nexport const HomePostTitle = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const HomePostBody = styled.div`\n  font-size: 18px;\n  line-height: 1.5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  color: #333;\n\n  word-wrap: break-word;\n  word-break: break-all;\n  white-space: pre-wrap;\n`\n\nexport const HomePostAuthor = styled.div`\n  font-size: 14px;\n  margin-bottom: 4px;\n  color: rgba(0, 0, 0, 0.5);\n`\n\nexport const HomePostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nexport const Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  margin: 28px 0 8px;\n`\n\nexport const PageBtn = styled.div`\n  cursor: pointer;\n  font-weight: bold;\n\n  &:hover {\n    color: #145df6;\n  }\n`\nexport const CurrentPage = styled.div`\n  margin: 0 16px;\n`\n\nexport const TotalPage = styled.div`\n  text-align: center;\n`\n","import React, { useState, useLayoutEffect, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport MDEditor from '@uiw/react-md-editor'\nimport { getPosts } from '../../WebAPI'\nimport { LoadingContext } from '../../contexts'\nimport {\n  HomePostContainer,\n  HomePostTitle,\n  HomePostAuthor,\n  HomePostDate,\n  HomePostBody,\n  HomePostList,\n  Pagination,\n  PageBtn,\n  CurrentPage,\n  TotalPage,\n} from './HomePageStyle'\n\nfunction HomePost({ post }) {\n  return (\n    <HomePostContainer to={`/posts/${post.id}`}>\n      <HomePostTitle>{post.title}</HomePostTitle>\n      <HomePostAuthor>{post.user && post.user.nickname}</HomePostAuthor>\n      <HomePostDate>\n        {new Date(post.createdAt).toLocaleDateString()}\n      </HomePostDate>\n      <HomePostBody>\n        <MDEditor.Markdown source={post.body} />\n      </HomePostBody>\n    </HomePostContainer>\n  )\n}\n\nHomePost.propTypes = {\n  post: PropTypes.object,\n}\n\nfunction HomePage() {\n  const { setIsLoading } = useContext(LoadingContext)\n  const [posts, setPosts] = useState([])\n  const [page, setPage] = useState(1)\n  const [totalPostPages, setTotalPostPages] = useState(0)\n  const [isPaginationLoading, setIsPaginationLoading] = useState(null)\n\n  useLayoutEffect(() => {\n    const homePagePosts = async () => {\n      setIsLoading(true)\n      setIsPaginationLoading(false)\n\n      const data = await getPosts(page)\n      setPosts(data.data)\n      setTotalPostPages(Math.ceil((data.total - 1) / 5))\n\n      setIsLoading(false)\n      setIsPaginationLoading(true)\n    }\n\n    homePagePosts()\n  }, [setIsLoading, page, totalPostPages])\n\n  const handlePreBtnClick = () => {\n    if (page > 1) {\n      setPage(page - 1)\n    }\n    window.scrollTo(0, 0)\n  }\n\n  const handleNextBtnClick = () => {\n    if (page < totalPostPages) {\n      setPage(page + 1)\n    }\n    window.scrollTo(0, 0)\n  }\n\n  return (\n    <HomePostList>\n      {posts.map((post) => (\n        <HomePost key={post.id} post={post} />\n      ))}\n      {isPaginationLoading && (\n        <>\n          <Pagination>\n            <PageBtn onClick={handlePreBtnClick}>＜</PageBtn>\n            <CurrentPage>{page}</CurrentPage>\n            <PageBtn onClick={handleNextBtnClick}>＞</PageBtn>\n          </Pagination>\n          <TotalPage>\n            {page} / {totalPostPages}\n          </TotalPage>\n        </>\n      )}\n    </HomePostList>\n  )\n}\n\nexport default HomePage\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const PostList = styled.div`\n  padding: 16px;\n  max-width: 800px;\n  margin: 40px auto;\n`\n\nexport const YearContainer = styled.div`\n  padding-top: 32px;\n\n  & + & {\n    margin-top: 32px;\n  }\n`\n\nexport const Year = styled.span`\n  display: inline-block;\n  font-size: 32px;\n  font-weight: 600;\n  margin-bottom: 24px;\n  border-bottom: 3px solid #145df6;\n`\n\nexport const PostContainer = styled(Link)`\n  padding: 8px 24px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  background: white;\n\n  &:hover {\n    transform: scale(1.1);\n    border: 1px solid #ccc;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  }\n`\n\nexport const PostTitle = styled.div`\n  font-size: 24px;\n  color: #333;\n  max-width: 600px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport const PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.7);\n  font-size: 14px;\n`\n","import React, { useLayoutEffect, useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { getPostsList } from '../../WebAPI'\nimport { LoadingContext } from '../../contexts'\nimport {\n  PostContainer,\n  PostTitle,\n  PostDate,\n  PostList,\n  YearContainer,\n  Year,\n} from './PostListPageStyle'\n\nfunction Post({ post }) {\n  return (\n    <PostContainer to={`/posts/${post.id}`}>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>\n        {new Date(post.createdAt).toLocaleDateString().substring(5, 10)}\n      </PostDate>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n}\n\nfunction PostListPage() {\n  const { setIsLoading } = useContext(LoadingContext)\n  const [posts, setPosts] = useState([])\n  const [years, setYears] = useState([])\n\n  useLayoutEffect(() => {\n    const PostsList = async () => {\n      setIsLoading(true)\n\n      const data = await getPostsList()\n      setPosts(data)\n\n      const yearsArray = []\n      for (const post of posts) {\n        yearsArray.push(new Date(post.createdAt).getFullYear())\n      }\n      setYears([...new Set(yearsArray)])\n\n      setIsLoading(false)\n    }\n\n    PostsList()\n  }, [setIsLoading, posts])\n\n  return (\n    <PostList>\n      {years.map((year) => {\n        return (\n          <YearContainer>\n            <Year>{year}</Year>\n            {posts\n              .filter((post) => new Date(post.createdAt).getFullYear() === year)\n              .map((post) => (\n                <Post key={post.id} post={post} />\n              ))}\n          </YearContainer>\n        )\n      })}\n    </PostList>\n  )\n}\n\nexport default PostListPage\n","import styled from 'styled-components'\n\nexport const PostContainer = styled.div`\n  width: 70%;\n  margin: 56px auto;\n`\n\nexport const PostTitle = styled.div`\n  font-size: 28px;\n  font-weight: bold;\n  text-align: center;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #ccc;\n  word-wrap: break-word;\n  word-break: break-all;\n`\n\nexport const PostBody = styled.div`\n  padding: 16px 18px 0;\n  max-width: 800px;\n  margin: 0 auto;\n`\n\nexport const PostInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 24px;\n`\n\nexport const PostAuthor = styled.div`\n  font-size: 16px;\n  color: #333;\n  margin-bottom: 4px;\n`\n\nexport const PostCreatedAt = styled.div`\n  font-size: 14px;\n  text-align: right;\n  color: gray;\n`\n\nexport const PostContent = styled.div`\n  margin-bottom: 28px;\n  line-height: 1.7;\n  word-wrap: break-word;\n  word-break: break-all;\n  white-space: pre-wrap;\n`\n","import React, { useLayoutEffect, useState, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport MDEditor from '@uiw/react-md-editor'\nimport { getPostId } from '../../WebAPI'\nimport { LoadingContext } from '../../contexts'\nimport {\n  PostContainer,\n  PostTitle,\n  PostBody,\n  PostInfo,\n  PostAuthor,\n  PostCreatedAt,\n  PostContent,\n} from './PostPageStyle'\n\nfunction PostPage() {\n  const { id } = useParams()\n  const { setIsLoading } = useContext(LoadingContext)\n  const [post, setPost] = useState({})\n\n  useLayoutEffect(() => {\n    const getPost = async () => {\n      setIsLoading(true)\n\n      const data = await getPostId(id)\n      setPost(data)\n\n      setIsLoading(false)\n    }\n\n    getPost()\n  }, [setIsLoading, id])\n\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostBody>\n        <PostInfo>\n          <PostAuthor>{post.user && post.user.nickname}</PostAuthor>\n          <PostCreatedAt>\n            {new Date(post.createdAt).toLocaleDateString()}\n          </PostCreatedAt>\n        </PostInfo>\n        <PostContent>\n          <MDEditor.Markdown source={post.body} />\n        </PostContent>\n      </PostBody>\n    </PostContainer>\n  )\n}\n\nexport default PostPage\n","import styled, { keyframes } from 'styled-components'\n\nexport const flow = keyframes`\n  0% {\n    border-bottom: 1px solid #ccc;\n  }\n\n  50% {\n    border-bottom: 1px solid #145df6;\n    color: #145df6;\n  }\n\n  100% {\n    border-bottom: 1px solid #ccc;\n  }\n`\n\nexport const FormContainer = styled.form`\n  width: 70%;\n  margin: 56px auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\n\nexport const FormTitleButton = styled.button`\n  font-size: 28px;\n  font-weight: bold;\n  text-align: center;\n  padding-bottom: 16px;\n  width: 100%;\n  margin-bottom: 54px;\n  border-bottom: 1px solid #ccc;\n  animation: ${flow} 2s infinite;\n  background: none;\n`\nexport const FormInfo = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & + & {\n    margin-top: 48px;\n  }\n`\n\nexport const FormText = styled.div`\n  margin-right: 24px;\n  color: #333;\n  font-weight: 600;\n`\n\nexport const FormInput = styled.input`\n  display: block;\n  padding: 6px 0;\n\n  &::-webkit-input-placeholder {\n    text-align: center;\n  }\n\n  &:focus {\n    border-bottom: 1px solid #ccc;\n  }\n`\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  position: absolute;\n  top: 70px;\n`\n","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { login, getMe } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { AuthContext } from '../../contexts'\nimport {\n  FormContainer,\n  FormTitleButton,\n  FormInfo,\n  FormInput,\n  FormText,\n  ErrorMessage,\n} from '../../style/formStyle'\n\nfunction LoginPage() {\n  const { setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState()\n  const history = useHistory()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setErrorMessage(null)\n\n    const LoginResponse = await login(username, password)\n\n    if (!LoginResponse.ok) {\n      setErrorMessage(LoginResponse.message)\n      return\n    }\n\n    setAuthToken(LoginResponse.token)\n\n    const getMeResponse = await getMe()\n\n    if (!getMeResponse) {\n      setAuthToken(null)\n      setErrorMessage(getMeResponse.toString())\n    }\n    setUser(getMeResponse.data)\n    history.push('/')\n  }\n\n  const handleUsernameInput = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const handleInputFocus = () => {\n    setErrorMessage(null)\n  }\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormTitleButton>登入</FormTitleButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <FormInfo>\n        <FormText>username</FormText>\n        <FormInput\n          value={username}\n          onChange={handleUsernameInput}\n          onFocus={handleInputFocus}\n        />\n      </FormInfo>\n      <FormInfo>\n        <FormText>password</FormText>\n        <FormInput\n          type=\"password\"\n          value={password}\n          onChange={handlePasswordInput}\n          onFocus={handleInputFocus}\n        />\n      </FormInfo>\n    </FormContainer>\n  )\n}\n\nexport default LoginPage\n","import styled, { keyframes } from 'styled-components'\n\nconst flow = keyframes`\n  0% {\n    border-bottom: 3px solid #ccc;\n  }\n\n  50% {\n    border-bottom: 3px solid #145df6;\n    color: #333;\n  }\n\n  100% {\n    border-bottom: 3px solid #ccc;\n  }\n`\n\nexport const LoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10;\n`\nexport const Loading = styled.div`\n  font-size: 48px;\n  padding: 0 24px 16px;\n  color: #ccc;\n  animation: ${flow} 2s infinite;\n`\n","import React from 'react'\nimport {LoadingWrapper, Loading} from './LoadingPageStyle'\n\nfunction LoadingPage() {\n  return (\n    <LoadingWrapper>\n      <Loading>Loading</Loading>\n    </LoadingWrapper>\n  )\n}\n\nexport default LoadingPage\n","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { register, getMe } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { AuthContext } from '../../contexts'\nimport {\n  FormContainer,\n  FormTitleButton,\n  FormInfo,\n  FormInput,\n  FormText,\n  ErrorMessage,\n} from '../../style/formStyle'\n\nfunction LoginPage() {\n  const { setUser } = useContext(AuthContext)\n  const [nickname, setNickname] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState()\n  const history = useHistory()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setErrorMessage(null)\n\n    const registerResponse = await register(nickname, username, password)\n\n    if (!registerResponse.ok) {\n      setErrorMessage(registerResponse.message)\n      return\n    }\n\n    setAuthToken(registerResponse.token)\n\n    const getMeResponse = await getMe()\n\n    if (!getMeResponse) {\n      setAuthToken(null)\n      setErrorMessage(getMeResponse.toString())\n    }\n    setUser(getMeResponse.data)\n    history.push('/')\n  }\n\n  const handleNicknameInput = (e) => {\n    setNickname(e.target.value)\n  }\n\n  const handleUsernameInput = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handlePasswordInput = (e) => {\n    setPassword(e.target.value)\n  }\n\n  const handleInputFocus = () => {\n    setErrorMessage(null)\n  }\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormTitleButton>註冊</FormTitleButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <FormInfo>\n        <FormText>nickname</FormText>\n        <FormInput\n          value={nickname}\n          onChange={handleNicknameInput}\n          onFocus={handleInputFocus}\n        />\n      </FormInfo>\n      <FormInfo>\n        <FormText>username</FormText>\n        <FormInput\n          value={username}\n          onChange={handleUsernameInput}\n          onFocus={handleInputFocus}\n        />\n      </FormInfo>\n      <FormInfo>\n        <FormText>password</FormText>\n        <FormInput\n          type=\"password\"\n          value={password}\n          onChange={handlePasswordInput}\n          onFocus={handleInputFocus}\n        />\n      </FormInfo>\n    </FormContainer>\n  )\n}\n\nexport default LoginPage\n","import styled, { keyframes } from 'styled-components'\n\nexport const flow = keyframes`\n  0% {\n    border-bottom: 1px solid #ccc;\n  }\n\n  50% {\n    border-bottom: 1px solid #145df6;\n    color: #145df6;\n  }\n\n  100% {\n    border-bottom: 1px solid #ccc;\n  }\n`\n\nexport const NewPostContainer = styled.div`\n  max-width: 800px;\n  margin: 56px auto;\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const NewPostTitle = styled.label`\n  margin-bottom: 54px;\n  width: 100%;\n`\n\nexport const NewPostTitleInput = styled.input`\n  width: 100%;\n  padding: 4px 8px;\n  text-overflow: ellipsis;\n  overflow: auto;\n\n  &:focus {\n    border-bottom: 1px solid #333;\n  }\n`\n\nexport const NewPostBody = styled.label`\n  display: block;\n  margin-bottom: 54px;\n`\n\nexport const NewPostContent = styled.textarea`\n  width: 100%;\n  padding: 16px 8px;\n`\n\nexport const NewPostButton = styled.button`\n  background: none;\n  padding-bottom: 4px;\n  font-size: 18px;\n  font-weight: bold;\n  animation: ${flow} 2s infinite;\n`\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  margin-top: 16px;\n`\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport MDEditor from '@uiw/react-md-editor'\nimport { createNewPost } from '../../WebAPI'\nimport {\n  NewPostContainer,\n  NewPostTitle,\n  NewPostTitleInput,\n  NewPostBody,\n  NewPostButton,\n  ErrorMessage,\n} from './NewPostPageStyle'\n\nfunction NewPostPage() {\n  const [titleValue, setTitleValue] = useState('')\n  const [postValue, setPostValue] = useState('')\n  const [errorMessage, setErrorMessage] = useState()\n\n  const history = useHistory()\n\n  const handleTitleInput = (e) => {\n    setTitleValue(e.target.value)\n  }\n\n  const handleInputFocus = () => {\n    setErrorMessage(null)\n  }\n\n  const handleSendPost = async (e) => {\n    e.preventDefault()\n    setErrorMessage(null)\n\n    if (!titleValue || !postValue) return setErrorMessage('未確實填寫')\n\n    const data = await createNewPost(titleValue, postValue)\n\n    if (data.id) {\n      history.push(`/posts/${data.id}`)\n    }\n  }\n\n  return (\n    <NewPostContainer>\n      <NewPostTitle>\n        <NewPostTitleInput\n          onFocus={handleInputFocus}\n          onChange={handleTitleInput}\n          placeholder=\"輸入標題...\"\n        />\n      </NewPostTitle>\n      <NewPostBody>\n        <MDEditor\n          value={postValue}\n          height={300}\n          textareaProps={{\n            placeholder: 'Please enter Markdown text',\n          }}\n          onChange={setPostValue}\n        />\n      </NewPostBody>\n      <NewPostButton onClick={handleSendPost}>送出</NewPostButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </NewPostContainer>\n  )\n}\n\nexport default NewPostPage\n","import styled from 'styled-components'\n\nexport const AboutContainer = styled.div`\n  max-width: 600px;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n`\n\nexport const AboutText = styled.div`\n  text-align: center;\n  line-height: 2;\n  font-size: 32px;\n`\n","import React from 'react'\nimport {AboutContainer, AboutText} from './AboutPageStyle'\n\nfunction AboutPage() {\n  return (\n    <AboutContainer>\n      <AboutText>\n        我是 YO\n        <br />\n        這是一個模仿 [FE302]\n        <br />\n        再加上自己的想法\n        <br />\n        集合而成的部落格\n      </AboutText>\n    </AboutContainer>\n  )\n}\n\nexport default AboutPage\n","import React, { useState, useEffect } from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport GlobalStyle from '../../style/globalStyle'\r\nimport Header from '../Header'\r\nimport HomePage from '../../pages/HomePage'\r\nimport PostListPage from '../../pages/PostListPage'\r\nimport PostPage from '../../pages/PostPage'\r\nimport LoginPage from '../../pages/LoginPage'\r\nimport LoadingPage from '../../pages/LoadingPage'\r\nimport RegisterPage from '../../pages/RegisterPage'\r\nimport NewPostPage from '../../pages/NewPostPage'\r\nimport AboutPage from '../../pages/AboutPage'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport { getMe } from '../../WebAPI'\r\nimport { getAuthToken } from '../../utils'\r\n\r\nconst Root = styled.div`\r\n  padding-top: 64px;\r\n`\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null)\r\n  const [isUser, setIsUser] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsUser(false)\r\n    const getToken = getAuthToken()\r\n    if (!getToken) return setIsUser(true)\r\n\r\n    getMe().then((response) => {\r\n      if (response.ok) {\r\n        setUser(response.data)\r\n      }\r\n      setIsUser(true)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\r\n        <Root>\r\n          <Router>\r\n            <GlobalStyle />\r\n            <Header isUser={isUser} />\r\n            {isLoading && <LoadingPage />}\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <HomePage />\r\n              </Route>\r\n              <Route path=\"/posts-list\">\r\n                <PostListPage />\r\n              </Route>\r\n              <Route path=\"/posts/:id\">\r\n                <PostPage />\r\n              </Route>\r\n              <Route path=\"/new-post\">\r\n                <NewPostPage />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <AboutPage />\r\n              </Route>\r\n              <Route path=\"/register\">\r\n                <RegisterPage />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <LoginPage />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </Root>\r\n      </LoadingContext.Provider>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}