{"version":3,"sources":["style/globalStyle.js","contexts.js","utils.js","style/style.js","components/Header/HeaderStyle.js","components/Header/Header.js","WebAPI.js","pages/HomePage/HomePageStyle.js","pages/HomePage/HomePage.js","pages/PostListPage/PostListPageStyle.js","pages/PostListPage/PostListPage.js","components/Comments.js","pages/PostPage/PostPageStyle.js","pages/PostPage/PostPage.js","style/formStyle.js","pages/LoginPage/LoginPage.js","pages/LoadingPage/LoadingPageStyle.js","pages/LoadingPage/LoadingPage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPageStyle.js","pages/NewPostPage/NewPostPage.js","pages/AboutPage/AboutPageStyle.js","pages/AboutPage/AboutPage.js","components/App/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","AuthContext","createContext","LoadingContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","MEDIA_QUERY_MD","HeaderWrapper","styled","div","Span","span","Hamburger","Brand","Link","NavbarContainer","props","$isMenuOpen","NavbarList","Nav","NavLink","activeStyle","Header","isUser","useContext","user","setUser","useState","isMenuOpen","setIsMenuOpen","console","log","to","onClick","BASE_URL","register","nickname","username","password","a","fetch","method","headers","body","JSON","stringify","response","json","data","message","login","getMe","authorization","getPostsList","getPosts","page","total","get","getPostId","id","getUserPosts","userId","createNewPost","title","deletePost","HomePostList","HomePostContainer","HomePostTitle","HomePostBody","HomePostAuthor","HomePostDate","Pagination","PageBtn","CurrentPage","TotalPage","HomePost","post","Date","createdAt","toLocaleDateString","Markdown","source","HomePage","setIsLoading","posts","setPosts","setPage","totalPostPages","setTotalPostPages","isPaginationLoading","setIsPaginationLoading","useLayoutEffect","fetchGetHomePosts","Math","ceil","map","window","scrollTo","PostList","ButtonWrapper","PostListButton","$active","YearContainer","Year","PostContainer","PostTitle","PostDate","Post","substring","PostListPage","postState","setPostState","years","setYears","fetchPostList","sort","b","useEffect","yearsArray","push","getFullYear","Set","handleAllPosts","handleUserPosts","fetchUserPostList","year","index","filter","COMMENTS_ID","Comments","script","document","createElement","src","setAttribute","async","comments","getElementById","appendChild","innerHTML","DeleteButton","PostBody","PostInfo","PostAuthor","PostCreatedAt","PostContent","PostPage","useParams","history","useHistory","setPost","setUserId","FetchGetPost","then","goBack","flow","keyframes","FormContainer","form","FormTitleButton","button","FormInfo","label","FormText","FormInput","input","ErrorMessage","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","loginResponse","ok","getMeResponse","toString","handleInputFocus","onSubmit","value","onChange","target","onFocus","type","LoadingWrapper","Loading","LoadingPage","setNickname","registerResponse","NewPostContainer","NewPostTitle","NewPostTitleInput","NewPostBody","NewPostButton","textarea","NewPostPage","titleValue","setTitleValue","postValue","setPostValue","handleSendPost","placeholder","height","textareaProps","AboutContainer","AboutText","AboutPage","Root","App","setIsUser","isLoading","Provider","exact","path","RegisterPage","ReactDOM","render"],"mappings":"kLAyCeA,EAvCKC,YAAH,ugBCAJC,EAAcC,wBAAc,MAC5BC,EAAiBD,wBAAc,MCAtCE,EAAa,QAENC,EAAe,SAACC,GAC3BC,aAAaC,QAAQJ,EAAYE,IAGtBG,EAAe,WAC1B,OAAOF,aAAaG,QAAQN,ICVvB,I,cAAMO,EAAiB,uCCIjBC,EAAgBC,IAAOC,IAAV,6SAatBH,GAKSI,EAAOF,IAAOG,KAAV,iJASJC,EAAYJ,IAAOC,IAAV,yLAIlBH,EAIUI,GAMDG,EAAQL,YAAOM,IAAPN,CAAH,gLAYLO,EAAkBP,IAAOC,IAAV,mKAMxBH,GAGE,SAACU,GAAD,OACAA,EAAMC,aAAN,yTAiBOC,EAAaV,IAAOC,IAAV,oMAKnBH,GAQSa,EAAMX,YAAOY,IAAPZ,CAAH,orBAuBZF,G,OC1GEe,EAAc,CAClB,cAAe,MACf,gBAAiB,gCAmEJC,I,oBAAAA,EAhEf,YAA6B,IAAXC,EAAU,EAAVA,OAChB,EAA0BC,qBAAW5B,GAA7B6B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KASA,OARAC,QAAQC,IAAIH,GASV,eAACrB,EAAD,WACE,cAACM,EAAD,CAAOmB,GAAG,IAAV,kBACA,eAACpB,EAAD,CACEK,YAAaW,EACbK,QAAS,kBAAMJ,GAAeD,IAFhC,UAIE,cAAClB,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,OAEDa,GACC,eAACR,EAAD,CAAiBE,YAAaW,EAA9B,UACE,eAACV,EAAD,WACE,cAACC,EAAD,CAAKa,GAAG,cAAcX,YAAaA,EAAaY,QAAS,kBAAMJ,GAAc,IAA7E,sCAGA,cAACV,EAAD,CAAKa,GAAG,SAASX,YAAaA,EAAaY,QAAS,kBAAMJ,GAAc,IAAxE,gCAGCJ,GACC,cAACN,EAAD,CAAKa,GAAG,YAAYX,YAAaA,EAAaY,QAAS,kBAAMJ,GAAc,IAA3E,yCAKJ,eAACX,EAAD,YACIO,GACA,qCACE,cAACN,EAAD,CAAKa,GAAG,YAAYX,YAAaA,EAAaY,QAAS,kBAAMJ,GAAc,IAA3E,0BAGA,cAACV,EAAD,CAAKa,GAAG,SAASX,YAAaA,EAAaY,QAAS,kBAAMJ,GAAc,IAAxE,6BAKHJ,GACC,cAACN,EAAD,CAAKa,GAAG,IAAIC,QA5CH,WACnBjC,EAAa,IACb0B,EAAQ,MACRG,GAAc,IAyCJ,oC,+BClERK,EAAW,qCAGJC,EAAQ,uCAAG,WAAOC,EAAUC,EAAUC,GAA3B,iBAAAC,EAAA,+EAEGC,MAAM,GAAD,OAAIN,EAAJ,aAAyB,CACnDO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBT,WACAC,WACAC,eAVgB,cAEdQ,EAFc,gBAaDA,EAASC,OAbR,cAadC,EAbc,yBAcbA,GAda,kCAgBpBlB,QAAQC,IAAI,KAAIkB,SAhBI,0DAAH,0DAoBRC,EAAK,uCAAG,WAAOb,EAAUC,GAAjB,iBAAAC,EAAA,+EAEMC,MAAM,GAAD,OAAIN,EAAJ,UAAsB,CAChDO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBR,WACAC,eATa,cAEXQ,EAFW,gBAYEA,EAASC,OAZX,cAYXC,EAZW,yBAaVA,GAbU,kCAejBlB,QAAQC,IAAI,KAAIkB,SAfC,0DAAH,wDAmBLE,EAAK,uCAAG,gCAAAZ,EAAA,6DACbtC,EAAQG,IADK,kBAGMoC,MAAM,GAAD,OAAIN,EAAJ,OAAmB,CAC7CQ,QAAS,CACPU,cAAc,UAAD,OAAYnD,MALZ,cAGX6C,EAHW,gBAQEA,EAASC,OARX,cAQXC,EARW,yBASVA,GATU,kCAWjBlB,QAAQC,IAAI,KAAIkB,SAXC,0DAAH,qDAeLI,GAAY,uCAAG,8BAAAd,EAAA,+EAEDC,MAAM,GAAD,OACvBN,EADuB,uCAFJ,cAElBY,EAFkB,gBAKLA,EAASC,OALJ,cAKlBC,EALkB,yBAMjBA,GANiB,kCAQxBlB,QAAQC,IAAI,KAAIkB,SARQ,0DAAH,qDAYZK,GAAQ,uCAAG,WAAOC,GAAP,mBAAAhB,EAAA,+EAEGC,MAAM,GAAD,OACvBN,EADuB,yBACEqB,EADF,mBAtEb,EAsEa,8CAFR,cAEdT,EAFc,gBAKDA,EAASC,OALR,cAKdC,EALc,OAMdQ,EAAQV,EAASJ,QAAQe,IAAI,iBANf,kBAOb,CAAET,OAAMQ,UAPK,kCASpB1B,QAAQC,IAAI,KAAIkB,SATI,0DAAH,sDAaRS,GAAS,uCAAG,WAAOC,GAAP,iBAAApB,EAAA,+EAEEC,MAAM,GAAD,OAAIN,EAAJ,kBAAsByB,EAAtB,kBAFP,cAEfb,EAFe,gBAGFA,EAASC,OAHP,cAGfC,EAHe,yBAIdA,GAJc,kCAMrBlB,QAAQC,IAAI,KAAIkB,SANK,0DAAH,sDAUTW,GAAY,uCAAG,WAAOC,GAAP,iBAAAtB,EAAA,+EAEDC,MAAM,GAAD,OAAIN,EAAJ,kBAAsB2B,EAAtB,kBAFJ,cAElBf,EAFkB,gBAGLA,EAASC,OAHJ,cAGlBC,EAHkB,OAIxBlB,QAAQC,IAAIiB,GAJY,kBAKjBA,GALiB,kCAOxBlB,QAAQC,IAAI,KAAIkB,SAPQ,0DAAH,sDAWZa,GAAa,uCAAG,WAAOC,EAAOpB,GAAd,mBAAAJ,EAAA,6DACrBtC,EAAQG,IADa,kBAGFoC,MAAM,GAAD,OAAIN,EAAJ,UAAsB,CAChDO,OAAQ,OACRC,QAAS,CACPU,cAAc,UAAD,OAAYnD,GACzB,eAAgB,oBAElB0C,KAAMC,KAAKC,UAAU,CACnBkB,QACApB,WAXqB,cAGnBG,EAHmB,gBAcNA,EAASC,OAdH,cAcnBC,EAdmB,yBAelBA,GAfkB,kCAiBzBlB,QAAQC,IAAI,KAAIkB,SAjBS,0DAAH,wDAqBbe,GAAU,uCAAG,WAAOL,GAAP,mBAAApB,EAAA,6DAClBtC,EAAQG,IADU,kBAGCoC,MAAM,GAAD,OAAIN,EAAJ,kBAAsByB,GAAM,CACtDlB,OAAQ,SACRC,QAAS,CACPU,cAAc,UAAD,OAAYnD,GACzB,eAAgB,sBAPE,cAGhB6C,EAHgB,gBAUHA,EAASC,KAVN,cAUhBC,EAVgB,yBAWfA,GAXe,kCAatBlB,QAAQC,IAAI,KAAIkB,SAbM,0DAAH,sDC3HVgB,GAAezD,IAAOC,IAAV,yFAMZyD,GAAoB1D,YAAOM,IAAPN,CAAH,gUAmBjB2D,GAAgB3D,IAAOC,IAAV,8IAQb2D,GAAe5D,IAAOC,IAAV,0SAeZ4D,GAAiB7D,IAAOC,IAAV,qGAMd6D,GAAe9D,IAAOC,IAAV,sGAMZ8D,GAAa/D,IAAOC,IAAV,2HAOV+D,GAAUhE,IAAOC,IAAV,wIASPgE,GAAcjE,IAAOC,IAAV,+CAIXiE,GAAYlE,IAAOC,IAAV,mDCjEtB,SAASkE,GAAT,GAA6B,IAATC,EAAQ,EAARA,KAClB,OACE,eAACV,GAAD,CAAmBlC,GAAE,iBAAY4C,EAAKjB,IAAtC,UACE,cAACQ,GAAD,UAAgBS,EAAKb,QACrB,cAACM,GAAD,UAAiBO,EAAKnD,MAAQmD,EAAKnD,KAAKW,WACxC,cAACkC,GAAD,UACG,IAAIO,KAAKD,EAAKE,WAAWC,uBAE5B,cAACX,GAAD,UACE,cAAC,IAASY,SAAV,CAAmBC,OAAQL,EAAKjC,YAoEzBuC,I,wBAAAA,GA1Df,WACE,IAAQC,EAAiB3D,qBAAW1B,GAA5BqF,aACR,EAA0BxD,mBAAS,IAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAAwB1D,mBAAS,GAAjC,mBAAO4B,EAAP,KAAa+B,EAAb,KACA,EAA4C3D,mBAAS,GAArD,mBAAO4D,EAAP,KAAuBC,EAAvB,KACA,EAAsD7D,mBAAS,MAA/D,mBAAO8D,EAAP,KAA4BC,EAA5B,KAgCA,OA9BAC,2BAAgB,WACd,IAAMC,EAAiB,uCAAG,4BAAArD,EAAA,6DACxB4C,GAAa,GACbO,GAAuB,GAFC,SAILpC,GAASC,GAJJ,OAIlBP,EAJkB,OAKxBqC,EAASrC,EAAKA,MACdwC,EAAkBK,KAAKC,MAAM9C,EAAKQ,MAAQ,GAAK,IAE/C2B,GAAa,GACbO,GAAuB,GATC,2CAAH,qDAYvBE,MACC,CAACT,EAAc5B,EAAMgC,IAiBtB,eAACtB,GAAD,WACGmB,EAAMW,KAAI,SAACnB,GAAD,OACT,cAACD,GAAD,CAAwBC,KAAMA,GAAfA,EAAKjB,OAErB8B,GACC,qCACE,eAAClB,GAAD,WACE,cAACC,GAAD,CAASvC,QAtBO,WACpBsB,EAAO,GACT+B,EAAQ/B,EAAO,GAEjByC,OAAOC,SAAS,EAAG,IAkBX,oBACA,cAACxB,GAAD,UAAclB,IACd,cAACiB,GAAD,CAASvC,QAjBQ,WACrBsB,EAAOgC,GACTD,EAAQ/B,EAAO,GAEjByC,OAAOC,SAAS,EAAG,IAaX,uBAEF,eAACvB,GAAD,WACGnB,EADH,MACYgC,Y,iBCpFTW,GAAW1F,IAAOC,IAAV,2FAKR0F,GAAgB3F,IAAOC,IAAV,oGAMb2F,GAAiB5F,IAAOC,IAAV,0KAGhB,SAACO,GAAD,OAAYA,EAAMqF,QAAU,QAAU,UAChC,SAACrF,GAAD,OAAYA,EAAMqF,QAAU,MAAQ,MAQxCC,GAAgB9F,IAAOC,IAAV,6FAQb8F,GAAO/F,IAAOG,KAAV,8JAQJ6F,GAAgBhG,YAAOM,IAAPN,CAAH,kTAebiG,GAAYjG,IAAOC,IAAV,gKASTiG,GAAWlG,IAAOC,IAAV,gFCnDrB,SAASkG,GAAT,GAAyB,IAAT/B,EAAQ,EAARA,KACd,OACE,eAAC4B,GAAD,CAAexE,GAAE,iBAAY4C,EAAKjB,IAAlC,UACE,cAAC8C,GAAD,UAAY7B,EAAKb,QACjB,cAAC2C,GAAD,UACG,IAAI7B,KAAKD,EAAKE,WAAWC,qBAAqB6B,UAAU,EAAG,SA6HrDC,OAnHf,WACE,IAAQpF,EAASD,qBAAW5B,GAApB6B,KACA0D,EAAiB3D,qBAAW1B,GAA5BqF,aACR,EAA0BxD,mBAAS,IAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAAkC1D,mBAAS,YAA3C,mBAAOmF,EAAP,KAAkBC,EAAlB,KACA,EAA0BpF,mBAAS,IAAnC,mBAAOqF,EAAP,KAAcC,EAAd,KAEAtB,2BAAgB,WACd,IAAMuB,EAAa,uCAAG,kCAAA3E,EAAA,yDACpB4C,GAAa,IAET1D,EAHgB,wBAIZoC,EAASpC,EAAKkC,GAJF,SAKCC,GAAaC,GALd,cAKZb,EALY,OAOZoC,EAAQpC,EAAKoC,MAAM+B,MAAK,SAAC5E,EAAG6E,GAChC,OAAO7E,EAAEuC,UAAYsC,EAAEtC,UAAY,GAAK,KAE1CO,EAASD,GACT2B,EAAa,WACb5B,GAAa,GAZK,4CAgBD9B,KAhBC,QAgBdL,EAhBc,OAiBpBqC,EAASrC,GACTmC,GAAa,GAlBO,4CAAH,qDAqBnB+B,MACC,CAAC/B,EAAc1D,IAElB4F,qBAAU,WACR,IADc,EACRC,EAAa,GADL,eAEKlC,GAFL,IAEd,2BAA0B,CAAC,IAAhBR,EAAe,QACxB0C,EAAWC,KAAK,IAAI1C,KAAKD,EAAKE,WAAW0C,gBAH7B,8BAMdP,EAAS,aAAI,IAAIQ,IAAIH,OACpB,CAAClC,IAEJ,IAAMsC,EAAiB,WACrBX,EAAa,YACb,IAAMG,EAAa,uCAAG,4BAAA3E,EAAA,6DACpB4C,GAAa,GADO,SAGD9B,KAHC,OAGdL,EAHc,OAKpBqC,EAASrC,GACTmC,GAAa,GANO,2CAAH,qDAQnB+B,KAGIS,EAAkB,WACtBZ,EAAa,WACb,IAAMa,EAAiB,uCAAG,gCAAArF,EAAA,6DACxB4C,GAAa,GAEPtB,EAASpC,EAAKkC,GAHI,SAILC,GAAaC,GAJR,OAIlBb,EAJkB,OAKlBoC,EAAQpC,EAAKoC,MAAM+B,MAAK,SAAC5E,EAAG6E,GAC9B,OAAO7E,EAAEuC,UAAYsC,EAAEtC,UAAY,GAAK,KAG5CO,EAASD,GACTD,GAAa,GAVW,2CAAH,qDAYvByC,KAGF,OACE,eAAC1B,GAAD,WACGzE,GACC,eAAC0E,GAAD,WACiB,aAAdW,GACC,qCACE,cAACV,GAAD,CAAgBC,SAAO,EAACpE,QAASyF,EAAjC,uBAEkB,IAHpB,IAKE,cAACtB,GAAD,CAAgBnE,QAAS0F,EAAzB,yBAKW,YAAdb,GACC,qCACE,cAACV,GAAD,CAAgBnE,QAASyF,EAAzB,uBAEkB,IAHpB,IAKE,cAACtB,GAAD,CAAgBC,SAAO,EAACpE,QAAS0F,EAAjC,4BAOPX,EAAMjB,KAAI,SAAC8B,EAAMC,GAChB,OACE,eAACxB,GAAD,WACE,cAACC,GAAD,UAAOsB,IACNzC,EACE2C,QAAO,SAACnD,GAAD,OAAU,IAAIC,KAAKD,EAAKE,WAAW0C,gBAAkBK,KAC5D9B,KAAI,SAACnB,GAAD,OACH,cAAC+B,GAAD,CAAoB/B,KAAMA,GAAfA,EAAKjB,SALFmE,UCjIxBE,GAAc,qBAwBLC,I,wBAAAA,GAtBf,WAmBE,OAlBAZ,qBAAU,WACR,IAAMa,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,gCACbH,EAAOI,aAAa,OAAQ,sBAC5BJ,EAAOI,aAAa,aAAc,YAClCJ,EAAOI,aAAa,QAAS,gBAC7BJ,EAAOI,aAAa,cAAe,aACnCJ,EAAOK,OAAQ,EAEf,IAAMC,EAAWL,SAASM,eAAeT,IAGzC,OAFIQ,GAAUA,EAASE,YAAYR,GAE5B,WACL,IAAMM,EAAWL,SAASM,eAAeT,IACrCQ,IAAUA,EAASG,UAAY,OAEpC,IAEI,qBAAKhF,GAAIqE,MCrBLxB,GAAgBhG,IAAOC,IAAV,0FAMbmI,GAAepI,IAAOC,IAAV,6LAaZgG,GAAYjG,IAAOC,IAAV,8MAUToI,GAAWrI,IAAOC,IAAV,oGAMRqI,GAAWtI,IAAOC,IAAV,uJAQRsI,GAAavI,IAAOC,IAAV,yFAMVuI,GAAgBxI,IAAOC,IAAV,wFAMbwI,GAAczI,IAAOC,IAAV,oICSTyI,I,qBAAAA,GAjDf,WACE,IAAQvF,EAAOwF,cAAPxF,GACAlC,EAASD,qBAAW5B,GAApB6B,KACA0D,EAAiB3D,qBAAW1B,GAA5BqF,aACFiE,EAAUC,cAChB,EAAwB1H,mBAAS,IAAjC,mBAAOiD,EAAP,KAAa0E,EAAb,KACA,EAA4B3H,mBAAS,MAArC,mBAAOkC,EAAP,KAAe0F,EAAf,KAsBA,OAnBA5D,2BAAgB,WACd,IAAM6D,EAAY,uCAAG,4BAAAjH,EAAA,6DACnB4C,GAAa,GADM,SAGAzB,GAAUC,GAHV,OAGbX,EAHa,OAInBsG,EAAQtG,GACRuG,EAAUvG,EAAKvB,KAAKkC,IACpBwB,GAAa,GANM,2CAAH,qDASlBqE,MACC,CAACrE,EAAcxB,IAShB,eAAC,GAAD,WACGlC,GAAQA,EAAKkC,KAAOE,GAAU,cAAC+E,GAAD,CAAc3G,QAR5B,WACnB+B,GAAWL,GAAI8F,MAAK,WAClBL,EAAQM,aAMuB,0BAC/B,cAAC,GAAD,UAAY9E,EAAKb,QACjB,eAAC8E,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,UAAanE,EAAKnD,MAAQmD,EAAKnD,KAAKW,WACpC,cAAC4G,GAAD,UACG,IAAInE,KAAKD,EAAKE,WAAWC,0BAG9B,cAACkE,GAAD,UACE,cAAC,IAASjE,SAAV,CAAmBC,OAAQL,EAAKjC,YAGpC,uBACA,cAAC,GAAD,QC3DOgH,GAAOC,YAAH,gNAeJC,GAAgBrJ,IAAOsJ,KAAV,2LAUbC,GAAkBvJ,IAAOwJ,OAAV,qPAQbL,IAGFM,GAAWzJ,IAAO0J,MAAV,6IAURC,GAAW3J,IAAOC,IAAV,0FAMR2J,GAAY5J,IAAO6J,MAAV,8LAaTC,GAAe9J,IAAOC,IAAV,kFCeV8J,I,SAAAA,GApEf,WACE,IAAQ7I,EAAYF,qBAAW5B,GAAvB8B,QACR,EAAgCC,mBAAS,IAAzC,mBAAOU,EAAP,KAAiBmI,EAAjB,KACA,EAAgC7I,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBmI,EAAjB,KACA,EAAwC9I,qBAAxC,mBAAO+I,EAAP,KAAqBC,EAArB,KACMvB,EAAUC,cAEVuB,EAAY,uCAAG,WAAOC,GAAP,iBAAAtI,EAAA,6DACnBsI,EAAEC,iBACFH,EAAgB,MAFG,SAISzH,EAAMb,EAAUC,GAJzB,WAIbyI,EAJa,QAMAC,GANA,uBAOjBL,EAAgBI,EAAc9H,SAPb,iCAWnBjD,EAAa+K,EAAc9K,OAXR,UAaSkD,IAbT,WAab8H,EAba,+BAgBjBjL,EAAa,MACb2K,EAAgBM,EAAcC,YAjBb,2BAoBnBxJ,EAAQuJ,EAAcjI,MACtBoG,EAAQ7B,KAAK,KArBM,4CAAH,sDAgCZ4D,EAAmB,WACvBR,EAAgB,OAGlB,OACE,eAACd,GAAD,CAAeuB,SAAUR,EAAzB,UACE,cAACb,GAAD,2BACCW,GAAgB,cAACJ,GAAD,UAAeI,IAChC,eAACT,GAAD,WACE,cAACE,GAAD,uBACA,cAACC,GAAD,CACEiB,MAAOhJ,EACPiJ,SApBoB,SAACT,GAC3BL,EAAYK,EAAEU,OAAOF,QAoBfG,QAASL,OAGb,eAAClB,GAAD,WACE,cAACE,GAAD,uBACA,cAACC,GAAD,CACEqB,KAAK,WACLJ,MAAO/I,EACPgJ,SAzBoB,SAACT,GAC3BJ,EAAYI,EAAEU,OAAOF,QAyBfG,QAASL,WCzEbxB,GAAOC,YAAH,6MAeG8B,GAAiBlL,IAAOC,IAAV,+LAUdkL,GAAUnL,IAAOC,IAAV,yHAILkJ,ICpBAiC,OARf,WACE,OACE,cAACF,GAAD,UACE,cAACC,GAAD,yBCyFSpB,I,wBAAAA,GAjFf,WACE,IAAQ7I,EAAYF,qBAAW5B,GAAvB8B,QACR,EAAgCC,mBAAS,IAAzC,mBAAOS,EAAP,KAAiByJ,EAAjB,KACA,EAAgClK,mBAAS,IAAzC,mBAAOU,EAAP,KAAiBmI,EAAjB,KACA,EAAgC7I,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBmI,EAAjB,KACA,EAAwC9I,qBAAxC,mBAAO+I,EAAP,KAAqBC,EAArB,KACMvB,EAAUC,cAEVuB,EAAY,uCAAG,WAAOC,GAAP,iBAAAtI,EAAA,6DACnBsI,EAAEC,iBACFH,EAAgB,MAFG,SAIYxI,EAASC,EAAUC,EAAUC,GAJzC,WAIbwJ,EAJa,QAMGd,GANH,uBAOjBL,EAAgBmB,EAAiB7I,SAPhB,iCAWnBjD,EAAa8L,EAAiB7L,OAXX,UAaSkD,IAbT,WAab8H,EAba,+BAgBjBjL,EAAa,MACb2K,EAAgBM,EAAcC,YAjBb,2BAoBnBxJ,EAAQuJ,EAAcjI,MACtBoG,EAAQ7B,KAAK,KArBM,4CAAH,sDAoCZ4D,EAAmB,WACvBR,EAAgB,OAGlB,OACE,eAACd,GAAD,CAAeuB,SAAUR,EAAzB,UACE,cAACb,GAAD,2BACCW,GAAgB,cAACJ,GAAD,UAAeI,IAChC,eAACT,GAAD,WACE,cAACE,GAAD,uBACA,cAACC,GAAD,CACEiB,MAAOjJ,EACPkJ,SAxBoB,SAACT,GAC3BgB,EAAYhB,EAAEU,OAAOF,QAwBfG,QAASL,OAGb,eAAClB,GAAD,WACE,cAACE,GAAD,uBACA,cAACC,GAAD,CACEiB,MAAOhJ,EACPiJ,SA5BoB,SAACT,GAC3BL,EAAYK,EAAEU,OAAOF,QA4BfG,QAASL,OAGb,eAAClB,GAAD,WACE,cAACE,GAAD,uBACA,cAACC,GAAD,CACEqB,KAAK,WACLJ,MAAO/I,EACPgJ,SAjCoB,SAACT,GAC3BJ,EAAYI,EAAEU,OAAOF,QAiCfG,QAASL,WCtFNxB,GAAOC,YAAH,gNAeJmC,GAAmBvL,IAAOC,IAAV,wIAQhBuL,GAAexL,IAAO0J,MAAV,sEAKZ+B,GAAoBzL,IAAO6J,MAAV,0KAWjB6B,GAAc1L,IAAO0J,MAAV,yEAUXiC,IALiB3L,IAAO4L,SAAV,oEAKE5L,IAAOwJ,OAAV,mJAKXL,KAGFW,GAAe9J,IAAOC,IAAV,yFCOV4L,I,MAAAA,GArDf,WACE,MAAoC1K,mBAAS,IAA7C,mBAAO2K,EAAP,KAAmBC,EAAnB,KACA,EAAkC5K,mBAAS,IAA3C,mBAAO6K,EAAP,KAAkBC,EAAlB,KACA,EAAwC9K,qBAAxC,mBAAO+I,EAAP,KAAqBC,EAArB,KAEMvB,EAAUC,cAUVqD,EAAc,uCAAG,WAAO7B,GAAP,eAAAtI,EAAA,yDACrBsI,EAAEC,iBACFH,EAAgB,MAEX2B,GAAeE,EAJC,yCAIiB7B,EAAgB,mCAJjC,uBAMF7G,GAAcwI,EAAYE,GANxB,QAMfxJ,EANe,QAQZW,IACPyF,EAAQ7B,KAAR,iBAAuBvE,EAAKW,KATT,2CAAH,sDAapB,OACE,eAACoI,GAAD,WACE,cAACC,GAAD,UACE,cAACC,GAAD,CACET,QArBiB,WACvBb,EAAgB,OAqBVW,SA1BiB,SAACT,GACxB0B,EAAc1B,EAAEU,OAAOF,QA0BjBsB,YAAY,kCAGhB,cAACT,GAAD,UACE,cAAC,IAAD,CACEb,MAAOmB,EACPI,OAAQ,IACRC,cAAe,CACbF,YAAa,8BAEfrB,SAAUmB,MAGd,cAACN,GAAD,CAAelK,QAASyK,EAAxB,0BACChC,GAAgB,cAAC,GAAD,UAAeA,QC3DzBoC,GAAiBtM,IAAOC,IAAV,8JASdsM,GAAYvM,IAAOC,IAAV,4FCQPuM,I,GAAAA,GAhBf,WACE,OACE,cAACF,GAAD,UACE,eAACC,GAAD,6BAEE,uBAFF,+CAIE,uBAJF,mDAME,uBANF,yDCWAE,GAAOzM,IAAOC,IAAV,oDA4DKyM,OAxDf,WACE,MAAwBvL,mBAAS,MAAjC,mBAAOF,EAAP,KAAaC,EAAb,KACA,EAA4BC,mBAAS,MAArC,mBAAOJ,EAAP,KAAe4L,EAAf,KACA,EAAkCxL,oBAAS,GAA3C,mBAAOyL,EAAP,KAAkBjI,EAAlB,KAeA,OAbAkC,qBAAU,WAGR,GAFA8F,GAAU,IACO/M,IACF,OAAO+M,GAAU,GAEhChK,IAAQsG,MAAK,SAAC3G,GACRA,EAASkI,KACXtJ,EAAQoB,EAASE,MACjBmK,GAAU,SAGb,IAGD,cAACvN,EAAYyN,SAAb,CAAsBhC,MAAO,CAAE5J,OAAMC,WAArC,SACE,cAAC5B,EAAeuN,SAAhB,CAAyBhC,MAAO,CAAE+B,YAAWjI,gBAA7C,SACE,cAAC8H,GAAD,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQ1L,OAAQA,IACf6L,GAAa,cAAC,GAAD,IACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAACC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAAC,GAAD,mBC/DhBE,IAASC,OAAO,cAAC,GAAD,IAASvF,SAASM,eAAe,W","file":"static/js/main.f9352b01.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  \r\n  a {\r\n    text-decoration: none;\r\n    display: flex;\r\n    transition: all 0.1s;\r\n  \r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  input {\r\n    outline: none;\r\n    border: none;\r\n  }\r\n  \r\n  button {\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &:hover, \r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  hr {\r\n    border: none;\r\n    border-bottom: 1px solid #ccc;\r\n    margin-bottom: 16px;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { createContext } from \"react\"\r\n\r\nexport const AuthContext = createContext(null)\r\nexport const LoadingContext = createContext(null)","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token)\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME)\r\n}\r\n\r\nexport function ScrollToTop() {\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n\r\n  return null\r\n}\r\n","export const MEDIA_QUERY_MD = '@media screen and (max-width: 768px)'","import styled from 'styled-components'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { MEDIA_QUERY_MD } from '../../style/style'\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  height: 64px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 0 32px;\r\n  background: white;\r\n  z-index: 50;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  width: 32px;\r\n  height: 4px;\r\n  margin-top: 5px;\r\n  background: #333;\r\n  transition: all 0.1s;\r\n`\r\n\r\nexport const Hamburger = styled.div`\r\n  display: none;\r\n  transition: all 0.1s;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    cursor: pointer;\r\n    display: block;\r\n\r\n    &:hover ${Span} {\r\n      background: #145df6;\r\n    }\r\n  }\r\n`\r\n\r\nexport const Brand = styled(Link)`\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  color: black;\r\n  transition: all 0.1s;\r\n  margin-right: 32px;\r\n\r\n  &:hover {\r\n    color: #145df6;\r\n  }\r\n`\r\n\r\nexport const NavbarContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    display: none;\r\n\r\n    ${(props) =>\r\n      props.$isMenuOpen &&\r\n      `\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      position: fixed;\r\n      //justify-content: flex-start;\r\n      padding-top: 32px;\r\n      top: 64px;\r\n      left: 0;\r\n      width: 100%;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      background: white;\r\n    `}\r\n  }\r\n`\r\n\r\nexport const NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 64px;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    flex-direction: column;\r\n    width: 100%;\r\n    //margin-bottom: 16px;\r\n    height: auto;\r\n  }\r\n`\r\n\r\nexport const Nav = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100px;\r\n  color: black;\r\n  transition: all 0.1s;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 0;\r\n    height: 2px;\r\n    background: #145df6;\r\n    transition: width 0.5s;\r\n  }\r\n\r\n  &:hover:before {\r\n    width: 100px;\r\n  }\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    margin-bottom: 16px;\r\n    width: 100%;\r\n\r\n    &:before {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 0;\r\n      height: 0;\r\n    }\r\n\r\n    &:hover:before {\r\n      width: 0;\r\n    }\r\n\r\n    &:hover {\r\n      font-weight: 600;\r\n      color: #145df6;\r\n    }\r\n  }\r\n`\r\n","import React, { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { AuthContext } from '../../contexts'\nimport { setAuthToken } from '../../utils'\nimport {\n  HeaderWrapper,\n  Hamburger,\n  Span,\n  NavbarContainer,\n  Brand,\n  NavbarList,\n  Nav,\n} from './HeaderStyle'\n\nconst activeStyle = {\n  'font-weight': '600',\n  'border-bottom': '2px solid rgba(0, 0, 0, 0.5)',\n}\n\nfunction Header({ isUser }) {\n  const { user, setUser } = useContext(AuthContext)\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  console.log(isMenuOpen)\n\n  const handleLogout = () => {\n    setAuthToken('')\n    setUser(null)\n    setIsMenuOpen(false)\n  }\n\n  return (\n    <HeaderWrapper>\n      <Brand to=\"/\">Blog</Brand>\n      <Hamburger\n        $isMenuOpen={isMenuOpen}\n        onClick={() => setIsMenuOpen(!isMenuOpen)}\n      >\n        <Span />\n        <Span />\n        <Span />\n      </Hamburger>\n      {isUser && (\n        <NavbarContainer $isMenuOpen={isMenuOpen}>\n          <NavbarList>\n            <Nav to=\"/posts-list\" activeStyle={activeStyle} onClick={() => setIsMenuOpen(false)}>\n              文章列表\n            </Nav>\n            <Nav to=\"/about\" activeStyle={activeStyle} onClick={() => setIsMenuOpen(false)}>\n              關於我\n            </Nav>\n            {user && (\n              <Nav to=\"/new-post\" activeStyle={activeStyle} onClick={() => setIsMenuOpen(false)}>\n                發布文章\n              </Nav>\n            )}\n          </NavbarList>\n          <NavbarList>\n            {!user && (\n              <>\n                <Nav to=\"/register\" activeStyle={activeStyle} onClick={() => setIsMenuOpen(false)}>\n                  註冊\n                </Nav>\n                <Nav to=\"/login\" activeStyle={activeStyle} onClick={() => setIsMenuOpen(false)}>\n                  登入\n                </Nav>\n              </>\n            )}\n            {user && (\n              <Nav to=\"/\" onClick={handleLogout}>\n                登出\n              </Nav>\n            )}\n          </NavbarList>\n        </NavbarContainer>\n      )}\n    </HeaderWrapper>\n  )\n}\n\nHeader.propTypes = {\n  isUser: PropTypes.bool,\n}\n\nexport default Header\n","import { getAuthToken } from './utils'\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nconst POST_LIMIT = 5\r\n\r\nexport const register = async (nickname, username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        nickname,\r\n        username,\r\n        password,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getMe = async () => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPostsList = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/posts?_sort=createdAt&_order=desc`\r\n    )\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPosts = async (page) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/posts?&_page=${page}&_limit=${POST_LIMIT}&_expand=user&_sort=createdAt&_order=desc`\r\n    )\r\n    const data = await response.json()\r\n    const total = response.headers.get('x-total-count') \r\n    return { data, total }\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getPostId = async (id) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts/${id}?_expand=user`)\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const getUserPosts = async (userId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/users/${userId}?_embed=posts`)\r\n    const data = await response.json()\r\n    console.log(data)\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const createNewPost = async (title, body) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      }),\r\n    })\r\n    const data = await response.json()\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n\r\nexport const deletePost = async (id) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        'content-type': 'application/json',\r\n      }\r\n    })\r\n    const data = await response.json\r\n    return data\r\n  } catch (err) {\r\n    console.log(err.message)\r\n  }\r\n}\r\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const HomePostList = styled.div`\n  padding: 16px;\n  max-width: 800px;\n  margin: 40px auto;\n`\n\nexport const HomePostContainer = styled(Link)`\n  border: 1px solid #ccc;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  color: #333;\n  transition: all 0.1s;\n\n  & + & {\n    margin-top: 24px;\n  }\n\n  &:hover {\n    color: blue;\n  }\n`\n\nexport const HomePostTitle = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const HomePostBody = styled.div`\n  font-size: 18px;\n  line-height: 1.5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n  color: #333;\n\n  word-wrap: break-word;\n  word-break: break-all;\n  white-space: pre-wrap;\n`\n\nexport const HomePostAuthor = styled.div`\n  font-size: 14px;\n  margin-bottom: 4px;\n  color: rgba(0, 0, 0, 0.5);\n`\n\nexport const HomePostDate = styled.div`\n  color: rgba(0, 0, 0, 0.5);\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nexport const Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  margin: 28px 0 8px;\n`\n\nexport const PageBtn = styled.div`\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.1s;\n\n  &:hover {\n    color: #145df6;\n  }\n`\nexport const CurrentPage = styled.div`\n  margin: 0 16px;\n`\n\nexport const TotalPage = styled.div`\n  text-align: center;\n`\n","import React, { useState, useLayoutEffect, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport { getPosts } from '../../WebAPI'\r\nimport { LoadingContext } from '../../contexts'\r\nimport {\r\n  HomePostContainer,\r\n  HomePostTitle,\r\n  HomePostAuthor,\r\n  HomePostDate,\r\n  HomePostBody,\r\n  HomePostList,\r\n  Pagination,\r\n  PageBtn,\r\n  CurrentPage,\r\n  TotalPage,\r\n} from './HomePageStyle'\r\n\r\nfunction HomePost({ post }) {\r\n  return (\r\n    <HomePostContainer to={`/posts/${post.id}`}>\r\n      <HomePostTitle>{post.title}</HomePostTitle>\r\n      <HomePostAuthor>{post.user && post.user.nickname}</HomePostAuthor>\r\n      <HomePostDate>\r\n        {new Date(post.createdAt).toLocaleDateString()}\r\n      </HomePostDate>\r\n      <HomePostBody>\r\n        <MDEditor.Markdown source={post.body} />\r\n      </HomePostBody>\r\n    </HomePostContainer>\r\n  )\r\n}\r\n\r\nHomePost.propTypes = {\r\n  post: PropTypes.object,\r\n}\r\n\r\nfunction HomePage() {\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const [posts, setPosts] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [totalPostPages, setTotalPostPages] = useState(0)\r\n  const [isPaginationLoading, setIsPaginationLoading] = useState(null)\r\n\r\n  useLayoutEffect(() => {\r\n    const fetchGetHomePosts = async () => {\r\n      setIsLoading(true)\r\n      setIsPaginationLoading(false)\r\n\r\n      const data = await getPosts(page)\r\n      setPosts(data.data)\r\n      setTotalPostPages(Math.ceil((data.total - 1) / 5))\r\n\r\n      setIsLoading(false)\r\n      setIsPaginationLoading(true)\r\n    }\r\n\r\n    fetchGetHomePosts()\r\n  }, [setIsLoading, page, totalPostPages])\r\n\r\n  const handlePreBtnClick = () => {\r\n    if (page > 1) {\r\n      setPage(page - 1)\r\n    }\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  const handleNextBtnClick = () => {\r\n    if (page < totalPostPages) {\r\n      setPage(page + 1)\r\n    }\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  return (\r\n    <HomePostList>\r\n      {posts.map((post) => (\r\n        <HomePost key={post.id} post={post} />\r\n      ))}\r\n      {isPaginationLoading && (\r\n        <>\r\n          <Pagination>\r\n            <PageBtn onClick={handlePreBtnClick}>＜</PageBtn>\r\n            <CurrentPage>{page}</CurrentPage>\r\n            <PageBtn onClick={handleNextBtnClick}>＞</PageBtn>\r\n          </Pagination>\r\n          <TotalPage>\r\n            {page} / {totalPostPages}\r\n          </TotalPage>\r\n        </>\r\n      )}\r\n    </HomePostList>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const PostList = styled.div`\r\n  padding: 16px;\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n`\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const PostListButton = styled.div`\r\n  margin: 0 8px;\r\n  cursor: pointer;\r\n  color: ${(props) => (props.$active ? 'black' : 'gray')};\r\n  font-weight: ${(props) => (props.$active ? '600' : '')};\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    color: #145df6;\r\n  }\r\n`\r\n\r\nexport const YearContainer = styled.div`\r\n  padding-top: 32px;\r\n\r\n  & + & {\r\n    margin-top: 32px;\r\n  }\r\n`\r\n\r\nexport const Year = styled.span`\r\n  display: inline-block;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  margin-bottom: 24px;\r\n  border-bottom: 3px solid #145df6;\r\n`\r\n\r\nexport const PostContainer = styled(Link)`\r\n  padding: 8px 24px;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  background: white;\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    border: 1px solid #ccc;\r\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n  }\r\n`\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 24px;\r\n  color: #333;\r\n  max-width: 600px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\nexport const PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.7);\r\n  font-size: 14px;\r\n`\r\n","import React, { useLayoutEffect, useEffect, useState, useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getPostsList, getUserPosts } from '../../WebAPI'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport {\r\n  PostContainer,\r\n  PostTitle,\r\n  PostDate,\r\n  PostList,\r\n  ButtonWrapper,\r\n  PostListButton,\r\n  YearContainer,\r\n  Year,\r\n} from './PostListPageStyle'\r\n\r\nfunction Post({ post }) {\r\n  return (\r\n    <PostContainer to={`/posts/${post.id}`}>\r\n      <PostTitle>{post.title}</PostTitle>\r\n      <PostDate>\r\n        {new Date(post.createdAt).toLocaleDateString().substring(5, 10)}\r\n      </PostDate>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object,\r\n}\r\n\r\nfunction PostListPage() {\r\n  const { user } = useContext(AuthContext)\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const [posts, setPosts] = useState([])\r\n  const [postState, setPostState] = useState('allPosts')\r\n  const [years, setYears] = useState([])\r\n\r\n  useLayoutEffect(() => {\r\n    const fetchPostList = async () => {\r\n      setIsLoading(true)\r\n\r\n      if (user) {\r\n        const userId = user.id\r\n        const data = await getUserPosts(userId)\r\n\r\n        const posts = data.posts.sort((a, b) => {\r\n          return a.createdAt < b.createdAt ? 1 : -1\r\n        })\r\n        setPosts(posts)\r\n        setPostState('myPosts')\r\n        setIsLoading(false)\r\n        return\r\n      }\r\n\r\n      const data = await getPostsList()\r\n      setPosts(data)\r\n      setIsLoading(false)\r\n    }\r\n\r\n    fetchPostList()\r\n  }, [setIsLoading, user])\r\n\r\n  useEffect(() => {\r\n    const yearsArray = []\r\n    for (const post of posts) {\r\n      yearsArray.push(new Date(post.createdAt).getFullYear())\r\n    }\r\n\r\n    setYears([...new Set(yearsArray)])\r\n  }, [posts])\r\n\r\n  const handleAllPosts = () => {\r\n    setPostState('allPosts')\r\n    const fetchPostList = async () => {\r\n      setIsLoading(true)\r\n\r\n      const data = await getPostsList()\r\n\r\n      setPosts(data)\r\n      setIsLoading(false)\r\n    }\r\n    fetchPostList()\r\n  }\r\n\r\n  const handleUserPosts = () => {\r\n    setPostState('myPosts')\r\n    const fetchUserPostList = async () => {\r\n      setIsLoading(true)\r\n\r\n      const userId = user.id\r\n      const data = await getUserPosts(userId)\r\n      const posts = data.posts.sort((a, b) => {\r\n          return a.createdAt < b.createdAt ? 1 : -1\r\n        })\r\n\r\n      setPosts(posts)\r\n      setIsLoading(false)\r\n    }\r\n    fetchUserPostList()\r\n  }\r\n\r\n  return (\r\n    <PostList>\r\n      {user && (\r\n        <ButtonWrapper>\r\n          {postState === 'allPosts' && (\r\n            <>\r\n              <PostListButton $active onClick={handleAllPosts}>\r\n                all posts\r\n              </PostListButton>{' '}\r\n              /\r\n              <PostListButton onClick={handleUserPosts}>\r\n                my posts\r\n              </PostListButton>\r\n            </>\r\n          )}\r\n          {postState === 'myPosts' && (\r\n            <>\r\n              <PostListButton onClick={handleAllPosts}>\r\n                all posts\r\n              </PostListButton>{' '}\r\n              /\r\n              <PostListButton $active onClick={handleUserPosts}>\r\n                my posts\r\n              </PostListButton>\r\n            </>\r\n          )}\r\n        </ButtonWrapper>\r\n      )}\r\n      {years.map((year, index) => {\r\n        return (\r\n          <YearContainer key={index}>\r\n            <Year>{year}</Year>\r\n            {posts\r\n              .filter((post) => new Date(post.createdAt).getFullYear() === year)\r\n              .map((post) => (\r\n                <Post key={post.id} post={post} />\r\n              ))}\r\n          </YearContainer>\r\n        )\r\n      })}\r\n    </PostList>\r\n  )\r\n}\r\n\r\nexport default PostListPage\r\n","import React, { useEffect } from 'react'\r\n\r\nconst COMMENTS_ID = 'comments-container'\r\n\r\nfunction Comments() {\r\n  useEffect(() => {\r\n    const script = document.createElement('script')\r\n    script.src = 'https://utteranc.es/client.js'\r\n    script.setAttribute('repo', 'YO-0115/react-blog')\r\n    script.setAttribute('issue-term', 'pathname')\r\n    script.setAttribute('theme', 'github-light')\r\n    script.setAttribute('crossorigin', 'anonymous')\r\n    script.async = true\r\n\r\n    const comments = document.getElementById(COMMENTS_ID)\r\n    if (comments) comments.appendChild(script)\r\n\r\n    return () => {\r\n      const comments = document.getElementById(COMMENTS_ID)\r\n      if (comments) comments.innerHTML = ''\r\n    }\r\n  }, [])\r\n\r\n  return <div id={COMMENTS_ID} />\r\n}\r\n\r\nexport default Comments\r\n","import styled from 'styled-components'\r\n\r\nexport const PostContainer = styled.div`\r\n  width: 70%;\r\n  margin: 56px auto;\r\n  position: relative;\r\n`\r\n\r\nexport const DeleteButton = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.1s;\r\n\r\n  &:hover {\r\n    color: #145df6;\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nexport const PostTitle = styled.div`\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding-bottom: 16px;\r\n  border-bottom: 1px solid #ccc;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n`\r\n\r\nexport const PostBody = styled.div`\r\n  padding: 16px 18px 0;\r\n  max-width: 800px;\r\n  margin: 0 auto 54px;\r\n`\r\n\r\nexport const PostInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nexport const PostAuthor = styled.div`\r\n  font-size: 16px;\r\n  color: #333;\r\n  margin-bottom: 4px;\r\n`\r\n\r\nexport const PostCreatedAt = styled.div`\r\n  font-size: 14px;\r\n  text-align: right;\r\n  color: gray;\r\n`\r\n\r\nexport const PostContent = styled.div`\r\n  margin-bottom: 28px;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  white-space: pre-wrap;\r\n`\r\n","import React, { useLayoutEffect, useState, useContext } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport { getPostId, deletePost } from '../../WebAPI'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport Comments from '../../components/Comments'\r\nimport {\r\n  PostContainer,\r\n  DeleteButton,\r\n  PostTitle,\r\n  PostBody,\r\n  PostInfo,\r\n  PostAuthor,\r\n  PostCreatedAt,\r\n  PostContent,\r\n} from './PostPageStyle'\r\n\r\nfunction PostPage() {\r\n  const { id } = useParams()\r\n  const { user } = useContext(AuthContext)\r\n  const { setIsLoading } = useContext(LoadingContext)\r\n  const history = useHistory()\r\n  const [post, setPost] = useState({})\r\n  const [userId, setUserId] = useState(null)\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    const FetchGetPost = async () => {\r\n      setIsLoading(true)\r\n     \r\n      const data = await getPostId(id)\r\n      setPost(data)  \r\n      setUserId(data.user.id)\r\n      setIsLoading(false)\r\n    }\r\n\r\n    FetchGetPost()\r\n  }, [setIsLoading, id])\r\n\r\n  const handleDelete = () => {\r\n    deletePost(id).then(() => {\r\n      history.goBack()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PostContainer>\r\n      {user && user.id === userId && <DeleteButton onClick={handleDelete}>刪除</DeleteButton>}\r\n      <PostTitle>{post.title}</PostTitle>\r\n      <PostBody>\r\n        <PostInfo>\r\n          <PostAuthor>{post.user && post.user.nickname}</PostAuthor>\r\n          <PostCreatedAt>\r\n            {new Date(post.createdAt).toLocaleDateString()}\r\n          </PostCreatedAt>\r\n        </PostInfo>\r\n        <PostContent>\r\n          <MDEditor.Markdown source={post.body} />\r\n        </PostContent>\r\n      </PostBody>\r\n      <hr/>\r\n      <Comments />\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nexport default PostPage\r\n","import styled, { keyframes } from 'styled-components'\n\nexport const flow = keyframes`\n  0% {\n    border-bottom: 1px solid #ccc;\n  }\n\n  50% {\n    border-bottom: 1px solid #145df6;\n    color: #145df6;\n  }\n\n  100% {\n    border-bottom: 1px solid #ccc;\n  }\n`\n\nexport const FormContainer = styled.form`\n  width: 70%;\n  margin: 56px auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\n\nexport const FormTitleButton = styled.button`\n  font-size: 28px;\n  font-weight: bold;\n  text-align: center;\n  padding-bottom: 16px;\n  width: 100%;\n  margin-bottom: 54px;\n  border-bottom: 1px solid #ccc;\n  animation: ${flow} 2s infinite;\n  background: none;\n`\nexport const FormInfo = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & + & {\n    margin-top: 48px;\n  }\n`\n\nexport const FormText = styled.div`\n  margin-right: 24px;\n  color: #333;\n  font-weight: 600;\n`\n\nexport const FormInput = styled.input`\n  display: block;\n  padding: 6px 0;\n\n  &::-webkit-input-placeholder {\n    text-align: center;\n  }\n\n  &:focus {\n    border-bottom: 1px solid #ccc;\n  }\n`\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  position: absolute;\n  top: 70px;\n`\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { login, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport {\r\n  FormContainer,\r\n  FormTitleButton,\r\n  FormInfo,\r\n  FormInput,\r\n  FormText,\r\n  ErrorMessage,\r\n} from '../../style/formStyle'\r\n\r\nfunction LoginPage() {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState()\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const loginResponse = await login(username, password)\r\n\r\n    if (!loginResponse.ok) {\r\n      setErrorMessage(loginResponse.message)\r\n      return\r\n    }\r\n\r\n    setAuthToken(loginResponse.token)\r\n\r\n    const getMeResponse = await getMe()\r\n\r\n    if (!getMeResponse) {\r\n      setAuthToken(null)\r\n      setErrorMessage(getMeResponse.toString())\r\n      return\r\n    }\r\n    setUser(getMeResponse.data)\r\n    history.push('/')\r\n  }\r\n\r\n  const handleUsernameInput = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleInputFocus = () => {\r\n    setErrorMessage(null)\r\n  }\r\n\r\n  return (\r\n    <FormContainer onSubmit={handleSubmit}>\r\n      <FormTitleButton>登入</FormTitleButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n      <FormInfo>\r\n        <FormText>username</FormText>\r\n        <FormInput\r\n          value={username}\r\n          onChange={handleUsernameInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n      <FormInfo>\r\n        <FormText>password</FormText>\r\n        <FormInput\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import styled, { keyframes } from 'styled-components'\n\nconst flow = keyframes`\n  0% {\n    border-bottom: 3px solid #ccc;\n  }\n\n  50% {\n    border-bottom: 3px solid #145df6;\n    color: #333;\n  }\n\n  100% {\n    border-bottom: 3px solid #ccc;\n  }\n`\n\nexport const LoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background: white;\n  z-index: 10;\n`\nexport const Loading = styled.div`\n  font-size: 48px;\n  padding: 0 24px 16px;\n  color: #ccc;\n  animation: ${flow} 2s infinite;\n`\n","import React from 'react'\nimport {LoadingWrapper, Loading} from './LoadingPageStyle'\n\nfunction LoadingPage() {\n  return (\n    <LoadingWrapper>\n      <Loading>Loading</Loading>\n    </LoadingWrapper>\n  )\n}\n\nexport default LoadingPage\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { register, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport {\r\n  FormContainer,\r\n  FormTitleButton,\r\n  FormInfo,\r\n  FormInput,\r\n  FormText,\r\n  ErrorMessage,\r\n} from '../../style/formStyle'\r\n\r\nfunction LoginPage() {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [nickname, setNickname] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState()\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const registerResponse = await register(nickname, username, password)\r\n\r\n    if (!registerResponse.ok) {\r\n      setErrorMessage(registerResponse.message)\r\n      return\r\n    }\r\n\r\n    setAuthToken(registerResponse.token)\r\n\r\n    const getMeResponse = await getMe()\r\n\r\n    if (!getMeResponse) {\r\n      setAuthToken(null)\r\n      setErrorMessage(getMeResponse.toString())\r\n      return\r\n    }\r\n    setUser(getMeResponse.data)\r\n    history.push('/')\r\n  }\r\n\r\n  const handleNicknameInput = (e) => {\r\n    setNickname(e.target.value)\r\n  }\r\n\r\n  const handleUsernameInput = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleInputFocus = () => {\r\n    setErrorMessage(null)\r\n  }\r\n\r\n  return (\r\n    <FormContainer onSubmit={handleSubmit}>\r\n      <FormTitleButton>註冊</FormTitleButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n      <FormInfo>\r\n        <FormText>nickname</FormText>\r\n        <FormInput\r\n          value={nickname}\r\n          onChange={handleNicknameInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n      <FormInfo>\r\n        <FormText>username</FormText>\r\n        <FormInput\r\n          value={username}\r\n          onChange={handleUsernameInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n      <FormInfo>\r\n        <FormText>password</FormText>\r\n        <FormInput\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordInput}\r\n          onFocus={handleInputFocus}\r\n        />\r\n      </FormInfo>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import styled, { keyframes } from 'styled-components'\n\nexport const flow = keyframes`\n  0% {\n    border-bottom: 1px solid #ccc;\n  }\n\n  50% {\n    border-bottom: 1px solid #145df6;\n    color: #145df6;\n  }\n\n  100% {\n    border-bottom: 1px solid #ccc;\n  }\n`\n\nexport const NewPostContainer = styled.div`\n  max-width: 800px;\n  margin: 56px auto;\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const NewPostTitle = styled.label`\n  margin-bottom: 54px;\n  width: 100%;\n`\n\nexport const NewPostTitleInput = styled.input`\n  width: 100%;\n  padding: 4px 8px;\n  text-overflow: ellipsis;\n  overflow: auto;\n\n  &:focus {\n    border-bottom: 1px solid #333;\n  }\n`\n\nexport const NewPostBody = styled.label`\n  display: block;\n  margin-bottom: 54px;\n`\n\nexport const NewPostContent = styled.textarea`\n  width: 100%;\n  padding: 16px 8px;\n`\n\nexport const NewPostButton = styled.button`\n  background: none;\n  padding-bottom: 4px;\n  font-size: 18px;\n  font-weight: bold;\n  animation: ${flow} 2s infinite;\n`\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  text-align: center;\n  margin-top: 16px;\n`\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport { createNewPost } from '../../WebAPI'\r\nimport {\r\n  NewPostContainer,\r\n  NewPostTitle,\r\n  NewPostTitleInput,\r\n  NewPostBody,\r\n  NewPostButton,\r\n  ErrorMessage,\r\n} from './NewPostPageStyle'\r\n\r\nfunction NewPostPage() {\r\n  const [titleValue, setTitleValue] = useState('')\r\n  const [postValue, setPostValue] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState()\r\n\r\n  const history = useHistory()\r\n\r\n  const handleTitleInput = (e) => {\r\n    setTitleValue(e.target.value)\r\n  }\r\n\r\n  const handleInputFocus = () => {\r\n    setErrorMessage(null)\r\n  }\r\n\r\n  const handleSendPost = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    if (!titleValue || !postValue) return setErrorMessage('未確實填寫')\r\n\r\n    const data = await createNewPost(titleValue, postValue)\r\n\r\n    if (data.id) {\r\n      history.push(`/posts/${data.id}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NewPostContainer>\r\n      <NewPostTitle>\r\n        <NewPostTitleInput\r\n          onFocus={handleInputFocus}\r\n          onChange={handleTitleInput}\r\n          placeholder=\"輸入標題...\"\r\n        />\r\n      </NewPostTitle>\r\n      <NewPostBody>\r\n        <MDEditor\r\n          value={postValue}\r\n          height={300}\r\n          textareaProps={{\r\n            placeholder: 'Please enter Markdown text',\r\n          }}\r\n          onChange={setPostValue}\r\n        />\r\n      </NewPostBody>\r\n      <NewPostButton onClick={handleSendPost}>送出</NewPostButton>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </NewPostContainer>\r\n  )\r\n}\r\n\r\nexport default NewPostPage\r\n","import styled from 'styled-components'\n\nexport const AboutContainer = styled.div`\n  max-width: 600px;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n`\n\nexport const AboutText = styled.div`\n  text-align: center;\n  line-height: 2;\n  font-size: 32px;\n`\n","import React from 'react'\nimport {AboutContainer, AboutText} from './AboutPageStyle'\n\nfunction AboutPage() {\n  return (\n    <AboutContainer>\n      <AboutText>\n        我是 YO\n        <br />\n        這是一個模仿 [FE302]\n        <br />\n        再加上自己的想法\n        <br />\n        集合而成的部落格\n      </AboutText>\n    </AboutContainer>\n  )\n}\n\nexport default AboutPage\n","import React, { useState, useEffect } from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport GlobalStyle from '../../style/globalStyle'\r\nimport Header from '../Header'\r\nimport HomePage from '../../pages/HomePage'\r\nimport PostListPage from '../../pages/PostListPage'\r\nimport PostPage from '../../pages/PostPage'\r\nimport LoginPage from '../../pages/LoginPage'\r\nimport LoadingPage from '../../pages/LoadingPage'\r\nimport RegisterPage from '../../pages/RegisterPage'\r\nimport NewPostPage from '../../pages/NewPostPage'\r\nimport AboutPage from '../../pages/AboutPage'\r\nimport { AuthContext, LoadingContext } from '../../contexts'\r\nimport { getMe } from '../../WebAPI'\r\nimport { getAuthToken } from '../../utils'\r\n\r\nconst Root = styled.div`\r\n  padding-top: 64px;\r\n`\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null)\r\n  const [isUser, setIsUser] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsUser(false)\r\n    const getToken = getAuthToken()\r\n    if (!getToken) return setIsUser(true)\r\n\r\n    getMe().then((response) => {\r\n      if (response.ok) {\r\n        setUser(response.data)\r\n        setIsUser(true)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\r\n        <Root>\r\n          <Router>\r\n            <GlobalStyle />\r\n            <Header isUser={isUser} />\r\n            {isLoading && <LoadingPage />}\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <HomePage />\r\n              </Route>\r\n              <Route path=\"/posts-list\">\r\n                <PostListPage />\r\n              </Route>\r\n              <Route path=\"/posts/:id\">\r\n                <PostPage />\r\n              </Route>\r\n              <Route path=\"/new-post\">\r\n                <NewPostPage />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <AboutPage />\r\n              </Route>\r\n              <Route path=\"/register\">\r\n                <RegisterPage />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <LoginPage />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </Root>\r\n      </LoadingContext.Provider>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}